/*
 * Camunda Platform REST API
 * OpenApi Spec for Camunda Platform REST API.
 *
 * The version of the OpenAPI document: 7.16.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.camunda.consulting.openapi.client.handler;

import com.camunda.consulting.openapi.client.model.ExceptionDto;
import com.camunda.consulting.openapi.client.model.MetricsIntervalResultDto;
import com.camunda.consulting.openapi.client.model.MetricsResultDto;
import java.time.OffsetDateTime;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for MetricsApi
 */
@Ignore
public class MetricsApiTest {

    private final MetricsApi api = new MetricsApi();

    
    /**
     * Delete Task Worker Metrics
     *
     * Deletes all task worker metrics prior to the given date or all if no date is provided.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteTaskMetricsTest() {
        OffsetDateTime date = null;
        api.deleteTaskMetrics(date);

        // TODO: test validations
    }
    
    /**
     * Get Sum
     *
     * Retrieves the &#x60;sum&#x60; (count) for a given metric.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getMetricsTest() {
        String metricsName = null;
        OffsetDateTime startDate = null;
        OffsetDateTime endDate = null;
        MetricsResultDto response = api.getMetrics(metricsName, startDate, endDate);

        // TODO: test validations
    }
    
    /**
     * Get Metrics in Interval
     *
     * Retrieves a list of metrics, aggregated for a given interval.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void intervalTest() {
        String name = null;
        String reporter = null;
        OffsetDateTime startDate = null;
        OffsetDateTime endDate = null;
        Integer firstResult = null;
        Integer maxResults = null;
        String interval = null;
        String aggregateByReporter = null;
        List<MetricsIntervalResultDto> response = api.interval(name, reporter, startDate, endDate, firstResult, maxResults, interval, aggregateByReporter);

        // TODO: test validations
    }
    
}
