/*
 * Camunda Platform REST API
 * OpenApi Spec for Camunda Platform REST API.
 *
 * The version of the OpenAPI document: 7.16.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.camunda.consulting.openapi.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.camunda.consulting.openapi.client.model.VariableValueDto;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;

/**
 * ExternalTaskFailureDtoAllOf
 */
@JsonPropertyOrder({
  ExternalTaskFailureDtoAllOf.JSON_PROPERTY_ERROR_MESSAGE,
  ExternalTaskFailureDtoAllOf.JSON_PROPERTY_ERROR_DETAILS,
  ExternalTaskFailureDtoAllOf.JSON_PROPERTY_RETRIES,
  ExternalTaskFailureDtoAllOf.JSON_PROPERTY_RETRY_TIMEOUT,
  ExternalTaskFailureDtoAllOf.JSON_PROPERTY_VARIABLES,
  ExternalTaskFailureDtoAllOf.JSON_PROPERTY_LOCAL_VARIABLES
})
@JsonTypeName("ExternalTaskFailureDto_allOf")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-10-13T16:56:52.297572+02:00[Europe/Berlin]")
public class ExternalTaskFailureDtoAllOf {
  public static final String JSON_PROPERTY_ERROR_MESSAGE = "errorMessage";
  private JsonNullable<String> errorMessage = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ERROR_DETAILS = "errorDetails";
  private JsonNullable<String> errorDetails = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_RETRIES = "retries";
  private JsonNullable<Integer> retries = JsonNullable.<Integer>undefined();

  public static final String JSON_PROPERTY_RETRY_TIMEOUT = "retryTimeout";
  private JsonNullable<Long> retryTimeout = JsonNullable.<Long>undefined();

  public static final String JSON_PROPERTY_VARIABLES = "variables";
  private JsonNullable<Map<String, VariableValueDto>> variables = JsonNullable.<Map<String, VariableValueDto>>undefined();

  public static final String JSON_PROPERTY_LOCAL_VARIABLES = "localVariables";
  private JsonNullable<Map<String, VariableValueDto>> localVariables = JsonNullable.<Map<String, VariableValueDto>>undefined();


  public ExternalTaskFailureDtoAllOf errorMessage(String errorMessage) {
    this.errorMessage = JsonNullable.<String>of(errorMessage);
    
    return this;
  }

   /**
   * An message indicating the reason of the failure.
   * @return errorMessage
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "An message indicating the reason of the failure.")
  @JsonIgnore

  public String getErrorMessage() {
        return errorMessage.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ERROR_MESSAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getErrorMessage_JsonNullable() {
    return errorMessage;
  }
  
  @JsonProperty(JSON_PROPERTY_ERROR_MESSAGE)
  public void setErrorMessage_JsonNullable(JsonNullable<String> errorMessage) {
    this.errorMessage = errorMessage;
  }

  public void setErrorMessage(String errorMessage) {
    this.errorMessage = JsonNullable.<String>of(errorMessage);
  }


  public ExternalTaskFailureDtoAllOf errorDetails(String errorDetails) {
    this.errorDetails = JsonNullable.<String>of(errorDetails);
    
    return this;
  }

   /**
   * A detailed error description.
   * @return errorDetails
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A detailed error description.")
  @JsonIgnore

  public String getErrorDetails() {
        return errorDetails.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ERROR_DETAILS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getErrorDetails_JsonNullable() {
    return errorDetails;
  }
  
  @JsonProperty(JSON_PROPERTY_ERROR_DETAILS)
  public void setErrorDetails_JsonNullable(JsonNullable<String> errorDetails) {
    this.errorDetails = errorDetails;
  }

  public void setErrorDetails(String errorDetails) {
    this.errorDetails = JsonNullable.<String>of(errorDetails);
  }


  public ExternalTaskFailureDtoAllOf retries(Integer retries) {
    this.retries = JsonNullable.<Integer>of(retries);
    
    return this;
  }

   /**
   * A number of how often the task should be retried. Must be &gt;&#x3D; 0. If this is 0, an incident is created and the task cannot be fetched anymore unless the retries are increased again. The incident&#39;s message is set to the &#x60;errorMessage&#x60; parameter.
   * @return retries
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A number of how often the task should be retried. Must be >= 0. If this is 0, an incident is created and the task cannot be fetched anymore unless the retries are increased again. The incident's message is set to the `errorMessage` parameter.")
  @JsonIgnore

  public Integer getRetries() {
        return retries.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_RETRIES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Integer> getRetries_JsonNullable() {
    return retries;
  }
  
  @JsonProperty(JSON_PROPERTY_RETRIES)
  public void setRetries_JsonNullable(JsonNullable<Integer> retries) {
    this.retries = retries;
  }

  public void setRetries(Integer retries) {
    this.retries = JsonNullable.<Integer>of(retries);
  }


  public ExternalTaskFailureDtoAllOf retryTimeout(Long retryTimeout) {
    this.retryTimeout = JsonNullable.<Long>of(retryTimeout);
    
    return this;
  }

   /**
   * A timeout in milliseconds before the external task becomes available again for fetching. Must be &gt;&#x3D; 0.
   * @return retryTimeout
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A timeout in milliseconds before the external task becomes available again for fetching. Must be >= 0.")
  @JsonIgnore

  public Long getRetryTimeout() {
        return retryTimeout.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_RETRY_TIMEOUT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Long> getRetryTimeout_JsonNullable() {
    return retryTimeout;
  }
  
  @JsonProperty(JSON_PROPERTY_RETRY_TIMEOUT)
  public void setRetryTimeout_JsonNullable(JsonNullable<Long> retryTimeout) {
    this.retryTimeout = retryTimeout;
  }

  public void setRetryTimeout(Long retryTimeout) {
    this.retryTimeout = JsonNullable.<Long>of(retryTimeout);
  }


  public ExternalTaskFailureDtoAllOf variables(Map<String, VariableValueDto> variables) {
    this.variables = JsonNullable.<Map<String, VariableValueDto>>of(variables);
    
    return this;
  }

  public ExternalTaskFailureDtoAllOf putVariablesItem(String key, VariableValueDto variablesItem) {
    if (this.variables == null || !this.variables.isPresent()) {
      this.variables = JsonNullable.<Map<String, VariableValueDto>>of(new HashMap<>());
    }
    try {
      this.variables.get().put(key, variablesItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * A JSON object containing variable key-value pairs. Each key is a variable name and each value a JSON variable value object with the following properties:
   * @return variables
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A JSON object containing variable key-value pairs. Each key is a variable name and each value a JSON variable value object with the following properties:")
  @JsonIgnore

  public Map<String, VariableValueDto> getVariables() {
        return variables.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_VARIABLES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Map<String, VariableValueDto>> getVariables_JsonNullable() {
    return variables;
  }
  
  @JsonProperty(JSON_PROPERTY_VARIABLES)
  public void setVariables_JsonNullable(JsonNullable<Map<String, VariableValueDto>> variables) {
    this.variables = variables;
  }

  public void setVariables(Map<String, VariableValueDto> variables) {
    this.variables = JsonNullable.<Map<String, VariableValueDto>>of(variables);
  }


  public ExternalTaskFailureDtoAllOf localVariables(Map<String, VariableValueDto> localVariables) {
    this.localVariables = JsonNullable.<Map<String, VariableValueDto>>of(localVariables);
    
    return this;
  }

  public ExternalTaskFailureDtoAllOf putLocalVariablesItem(String key, VariableValueDto localVariablesItem) {
    if (this.localVariables == null || !this.localVariables.isPresent()) {
      this.localVariables = JsonNullable.<Map<String, VariableValueDto>>of(new HashMap<>());
    }
    try {
      this.localVariables.get().put(key, localVariablesItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * A JSON object containing local variable key-value pairs. Local variables are set only in the scope of external task. Each key is a variable name and each value a JSON variable value object with the following properties:
   * @return localVariables
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A JSON object containing local variable key-value pairs. Local variables are set only in the scope of external task. Each key is a variable name and each value a JSON variable value object with the following properties:")
  @JsonIgnore

  public Map<String, VariableValueDto> getLocalVariables() {
        return localVariables.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LOCAL_VARIABLES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Map<String, VariableValueDto>> getLocalVariables_JsonNullable() {
    return localVariables;
  }
  
  @JsonProperty(JSON_PROPERTY_LOCAL_VARIABLES)
  public void setLocalVariables_JsonNullable(JsonNullable<Map<String, VariableValueDto>> localVariables) {
    this.localVariables = localVariables;
  }

  public void setLocalVariables(Map<String, VariableValueDto> localVariables) {
    this.localVariables = JsonNullable.<Map<String, VariableValueDto>>of(localVariables);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ExternalTaskFailureDtoAllOf externalTaskFailureDtoAllOf = (ExternalTaskFailureDtoAllOf) o;
    return Objects.equals(this.errorMessage, externalTaskFailureDtoAllOf.errorMessage) &&
        Objects.equals(this.errorDetails, externalTaskFailureDtoAllOf.errorDetails) &&
        Objects.equals(this.retries, externalTaskFailureDtoAllOf.retries) &&
        Objects.equals(this.retryTimeout, externalTaskFailureDtoAllOf.retryTimeout) &&
        Objects.equals(this.variables, externalTaskFailureDtoAllOf.variables) &&
        Objects.equals(this.localVariables, externalTaskFailureDtoAllOf.localVariables);
  }

  @Override
  public int hashCode() {
    return Objects.hash(errorMessage, errorDetails, retries, retryTimeout, variables, localVariables);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ExternalTaskFailureDtoAllOf {\n");
    sb.append("    errorMessage: ").append(toIndentedString(errorMessage)).append("\n");
    sb.append("    errorDetails: ").append(toIndentedString(errorDetails)).append("\n");
    sb.append("    retries: ").append(toIndentedString(retries)).append("\n");
    sb.append("    retryTimeout: ").append(toIndentedString(retryTimeout)).append("\n");
    sb.append("    variables: ").append(toIndentedString(variables)).append("\n");
    sb.append("    localVariables: ").append(toIndentedString(localVariables)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

