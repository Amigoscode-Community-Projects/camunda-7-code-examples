/*
 * Camunda Platform REST API
 * OpenApi Spec for Camunda Platform REST API.
 *
 * The version of the OpenAPI document: 7.16.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.camunda.consulting.openapi.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.camunda.consulting.openapi.client.model.ActivityInstanceIncidentDto;
import com.camunda.consulting.openapi.client.model.TransitionInstanceDto;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;

/**
 * A JSON object corresponding to the Activity Instance tree of the given process instance.
 */
@ApiModel(description = "A JSON object corresponding to the Activity Instance tree of the given process instance.")
@JsonPropertyOrder({
  ActivityInstanceDto.JSON_PROPERTY_ID,
  ActivityInstanceDto.JSON_PROPERTY_PARENT_ACTIVITY_INSTANCE_ID,
  ActivityInstanceDto.JSON_PROPERTY_ACTIVITY_ID,
  ActivityInstanceDto.JSON_PROPERTY_ACTIVITY_NAME,
  ActivityInstanceDto.JSON_PROPERTY_ACTIVITY_TYPE,
  ActivityInstanceDto.JSON_PROPERTY_PROCESS_INSTANCE_ID,
  ActivityInstanceDto.JSON_PROPERTY_PROCESS_DEFINITION_ID,
  ActivityInstanceDto.JSON_PROPERTY_CHILD_ACTIVITY_INSTANCES,
  ActivityInstanceDto.JSON_PROPERTY_CHILD_TRANSITION_INSTANCES,
  ActivityInstanceDto.JSON_PROPERTY_EXECUTION_IDS,
  ActivityInstanceDto.JSON_PROPERTY_INCIDENT_IDS,
  ActivityInstanceDto.JSON_PROPERTY_INCIDENTS
})
@JsonTypeName("ActivityInstanceDto")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-10-13T16:56:52.297572+02:00[Europe/Berlin]")
public class ActivityInstanceDto {
  public static final String JSON_PROPERTY_ID = "id";
  private JsonNullable<String> id = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_PARENT_ACTIVITY_INSTANCE_ID = "parentActivityInstanceId";
  private JsonNullable<String> parentActivityInstanceId = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ACTIVITY_ID = "activityId";
  private JsonNullable<String> activityId = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ACTIVITY_NAME = "activityName";
  private JsonNullable<String> activityName = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ACTIVITY_TYPE = "activityType";
  private JsonNullable<String> activityType = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_PROCESS_INSTANCE_ID = "processInstanceId";
  private JsonNullable<String> processInstanceId = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_PROCESS_DEFINITION_ID = "processDefinitionId";
  private JsonNullable<String> processDefinitionId = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_CHILD_ACTIVITY_INSTANCES = "childActivityInstances";
  private JsonNullable<List<ActivityInstanceDto>> childActivityInstances = JsonNullable.<List<ActivityInstanceDto>>undefined();

  public static final String JSON_PROPERTY_CHILD_TRANSITION_INSTANCES = "childTransitionInstances";
  private JsonNullable<List<TransitionInstanceDto>> childTransitionInstances = JsonNullable.<List<TransitionInstanceDto>>undefined();

  public static final String JSON_PROPERTY_EXECUTION_IDS = "executionIds";
  private JsonNullable<List<String>> executionIds = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_INCIDENT_IDS = "incidentIds";
  private JsonNullable<List<String>> incidentIds = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_INCIDENTS = "incidents";
  private JsonNullable<List<ActivityInstanceIncidentDto>> incidents = JsonNullable.<List<ActivityInstanceIncidentDto>>undefined();


  public ActivityInstanceDto id(String id) {
    this.id = JsonNullable.<String>of(id);
    
    return this;
  }

   /**
   * The id of the activity instance.
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The id of the activity instance.")
  @JsonIgnore

  public String getId() {
        return id.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getId_JsonNullable() {
    return id;
  }
  
  @JsonProperty(JSON_PROPERTY_ID)
  public void setId_JsonNullable(JsonNullable<String> id) {
    this.id = id;
  }

  public void setId(String id) {
    this.id = JsonNullable.<String>of(id);
  }


  public ActivityInstanceDto parentActivityInstanceId(String parentActivityInstanceId) {
    this.parentActivityInstanceId = JsonNullable.<String>of(parentActivityInstanceId);
    
    return this;
  }

   /**
   * The id of the parent activity instance, for example a sub process instance.
   * @return parentActivityInstanceId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The id of the parent activity instance, for example a sub process instance.")
  @JsonIgnore

  public String getParentActivityInstanceId() {
        return parentActivityInstanceId.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PARENT_ACTIVITY_INSTANCE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getParentActivityInstanceId_JsonNullable() {
    return parentActivityInstanceId;
  }
  
  @JsonProperty(JSON_PROPERTY_PARENT_ACTIVITY_INSTANCE_ID)
  public void setParentActivityInstanceId_JsonNullable(JsonNullable<String> parentActivityInstanceId) {
    this.parentActivityInstanceId = parentActivityInstanceId;
  }

  public void setParentActivityInstanceId(String parentActivityInstanceId) {
    this.parentActivityInstanceId = JsonNullable.<String>of(parentActivityInstanceId);
  }


  public ActivityInstanceDto activityId(String activityId) {
    this.activityId = JsonNullable.<String>of(activityId);
    
    return this;
  }

   /**
   * The id of the activity.
   * @return activityId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The id of the activity.")
  @JsonIgnore

  public String getActivityId() {
        return activityId.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ACTIVITY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getActivityId_JsonNullable() {
    return activityId;
  }
  
  @JsonProperty(JSON_PROPERTY_ACTIVITY_ID)
  public void setActivityId_JsonNullable(JsonNullable<String> activityId) {
    this.activityId = activityId;
  }

  public void setActivityId(String activityId) {
    this.activityId = JsonNullable.<String>of(activityId);
  }


  public ActivityInstanceDto activityName(String activityName) {
    this.activityName = JsonNullable.<String>of(activityName);
    
    return this;
  }

   /**
   * The name of the activity
   * @return activityName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The name of the activity")
  @JsonIgnore

  public String getActivityName() {
        return activityName.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ACTIVITY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getActivityName_JsonNullable() {
    return activityName;
  }
  
  @JsonProperty(JSON_PROPERTY_ACTIVITY_NAME)
  public void setActivityName_JsonNullable(JsonNullable<String> activityName) {
    this.activityName = activityName;
  }

  public void setActivityName(String activityName) {
    this.activityName = JsonNullable.<String>of(activityName);
  }


  public ActivityInstanceDto activityType(String activityType) {
    this.activityType = JsonNullable.<String>of(activityType);
    
    return this;
  }

   /**
   * The type of activity (corresponds to the XML element name in the BPMN 2.0, e.g., &#39;userTask&#39;)
   * @return activityType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The type of activity (corresponds to the XML element name in the BPMN 2.0, e.g., 'userTask')")
  @JsonIgnore

  public String getActivityType() {
        return activityType.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ACTIVITY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getActivityType_JsonNullable() {
    return activityType;
  }
  
  @JsonProperty(JSON_PROPERTY_ACTIVITY_TYPE)
  public void setActivityType_JsonNullable(JsonNullable<String> activityType) {
    this.activityType = activityType;
  }

  public void setActivityType(String activityType) {
    this.activityType = JsonNullable.<String>of(activityType);
  }


  public ActivityInstanceDto processInstanceId(String processInstanceId) {
    this.processInstanceId = JsonNullable.<String>of(processInstanceId);
    
    return this;
  }

   /**
   * The id of the process instance this activity instance is part of.
   * @return processInstanceId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The id of the process instance this activity instance is part of.")
  @JsonIgnore

  public String getProcessInstanceId() {
        return processInstanceId.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PROCESS_INSTANCE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getProcessInstanceId_JsonNullable() {
    return processInstanceId;
  }
  
  @JsonProperty(JSON_PROPERTY_PROCESS_INSTANCE_ID)
  public void setProcessInstanceId_JsonNullable(JsonNullable<String> processInstanceId) {
    this.processInstanceId = processInstanceId;
  }

  public void setProcessInstanceId(String processInstanceId) {
    this.processInstanceId = JsonNullable.<String>of(processInstanceId);
  }


  public ActivityInstanceDto processDefinitionId(String processDefinitionId) {
    this.processDefinitionId = JsonNullable.<String>of(processDefinitionId);
    
    return this;
  }

   /**
   * The id of the process definition.
   * @return processDefinitionId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The id of the process definition.")
  @JsonIgnore

  public String getProcessDefinitionId() {
        return processDefinitionId.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PROCESS_DEFINITION_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getProcessDefinitionId_JsonNullable() {
    return processDefinitionId;
  }
  
  @JsonProperty(JSON_PROPERTY_PROCESS_DEFINITION_ID)
  public void setProcessDefinitionId_JsonNullable(JsonNullable<String> processDefinitionId) {
    this.processDefinitionId = processDefinitionId;
  }

  public void setProcessDefinitionId(String processDefinitionId) {
    this.processDefinitionId = JsonNullable.<String>of(processDefinitionId);
  }


  public ActivityInstanceDto childActivityInstances(List<ActivityInstanceDto> childActivityInstances) {
    this.childActivityInstances = JsonNullable.<List<ActivityInstanceDto>>of(childActivityInstances);
    
    return this;
  }

  public ActivityInstanceDto addChildActivityInstancesItem(ActivityInstanceDto childActivityInstancesItem) {
    if (this.childActivityInstances == null || !this.childActivityInstances.isPresent()) {
      this.childActivityInstances = JsonNullable.<List<ActivityInstanceDto>>of(new ArrayList<>());
    }
    try {
      this.childActivityInstances.get().add(childActivityInstancesItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * A list of child activity instances.
   * @return childActivityInstances
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A list of child activity instances.")
  @JsonIgnore

  public List<ActivityInstanceDto> getChildActivityInstances() {
        return childActivityInstances.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_CHILD_ACTIVITY_INSTANCES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<ActivityInstanceDto>> getChildActivityInstances_JsonNullable() {
    return childActivityInstances;
  }
  
  @JsonProperty(JSON_PROPERTY_CHILD_ACTIVITY_INSTANCES)
  public void setChildActivityInstances_JsonNullable(JsonNullable<List<ActivityInstanceDto>> childActivityInstances) {
    this.childActivityInstances = childActivityInstances;
  }

  public void setChildActivityInstances(List<ActivityInstanceDto> childActivityInstances) {
    this.childActivityInstances = JsonNullable.<List<ActivityInstanceDto>>of(childActivityInstances);
  }


  public ActivityInstanceDto childTransitionInstances(List<TransitionInstanceDto> childTransitionInstances) {
    this.childTransitionInstances = JsonNullable.<List<TransitionInstanceDto>>of(childTransitionInstances);
    
    return this;
  }

  public ActivityInstanceDto addChildTransitionInstancesItem(TransitionInstanceDto childTransitionInstancesItem) {
    if (this.childTransitionInstances == null || !this.childTransitionInstances.isPresent()) {
      this.childTransitionInstances = JsonNullable.<List<TransitionInstanceDto>>of(new ArrayList<>());
    }
    try {
      this.childTransitionInstances.get().add(childTransitionInstancesItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * A list of child transition instances. A transition instance represents an execution waiting in an asynchronous continuation.
   * @return childTransitionInstances
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A list of child transition instances. A transition instance represents an execution waiting in an asynchronous continuation.")
  @JsonIgnore

  public List<TransitionInstanceDto> getChildTransitionInstances() {
        return childTransitionInstances.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_CHILD_TRANSITION_INSTANCES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<TransitionInstanceDto>> getChildTransitionInstances_JsonNullable() {
    return childTransitionInstances;
  }
  
  @JsonProperty(JSON_PROPERTY_CHILD_TRANSITION_INSTANCES)
  public void setChildTransitionInstances_JsonNullable(JsonNullable<List<TransitionInstanceDto>> childTransitionInstances) {
    this.childTransitionInstances = childTransitionInstances;
  }

  public void setChildTransitionInstances(List<TransitionInstanceDto> childTransitionInstances) {
    this.childTransitionInstances = JsonNullable.<List<TransitionInstanceDto>>of(childTransitionInstances);
  }


  public ActivityInstanceDto executionIds(List<String> executionIds) {
    this.executionIds = JsonNullable.<List<String>>of(executionIds);
    
    return this;
  }

  public ActivityInstanceDto addExecutionIdsItem(String executionIdsItem) {
    if (this.executionIds == null || !this.executionIds.isPresent()) {
      this.executionIds = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.executionIds.get().add(executionIdsItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * A list of execution ids.
   * @return executionIds
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A list of execution ids.")
  @JsonIgnore

  public List<String> getExecutionIds() {
        return executionIds.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_EXECUTION_IDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getExecutionIds_JsonNullable() {
    return executionIds;
  }
  
  @JsonProperty(JSON_PROPERTY_EXECUTION_IDS)
  public void setExecutionIds_JsonNullable(JsonNullable<List<String>> executionIds) {
    this.executionIds = executionIds;
  }

  public void setExecutionIds(List<String> executionIds) {
    this.executionIds = JsonNullable.<List<String>>of(executionIds);
  }


  public ActivityInstanceDto incidentIds(List<String> incidentIds) {
    this.incidentIds = JsonNullable.<List<String>>of(incidentIds);
    
    return this;
  }

  public ActivityInstanceDto addIncidentIdsItem(String incidentIdsItem) {
    if (this.incidentIds == null || !this.incidentIds.isPresent()) {
      this.incidentIds = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.incidentIds.get().add(incidentIdsItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * A list of incident ids.
   * @return incidentIds
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A list of incident ids.")
  @JsonIgnore

  public List<String> getIncidentIds() {
        return incidentIds.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_INCIDENT_IDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getIncidentIds_JsonNullable() {
    return incidentIds;
  }
  
  @JsonProperty(JSON_PROPERTY_INCIDENT_IDS)
  public void setIncidentIds_JsonNullable(JsonNullable<List<String>> incidentIds) {
    this.incidentIds = incidentIds;
  }

  public void setIncidentIds(List<String> incidentIds) {
    this.incidentIds = JsonNullable.<List<String>>of(incidentIds);
  }


  public ActivityInstanceDto incidents(List<ActivityInstanceIncidentDto> incidents) {
    this.incidents = JsonNullable.<List<ActivityInstanceIncidentDto>>of(incidents);
    
    return this;
  }

  public ActivityInstanceDto addIncidentsItem(ActivityInstanceIncidentDto incidentsItem) {
    if (this.incidents == null || !this.incidents.isPresent()) {
      this.incidents = JsonNullable.<List<ActivityInstanceIncidentDto>>of(new ArrayList<>());
    }
    try {
      this.incidents.get().add(incidentsItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * A list of JSON objects containing incident specific properties: * &#x60;id&#x60;: the id of the incident * &#x60;activityId&#x60;: the activity id in which the incident occurred
   * @return incidents
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A list of JSON objects containing incident specific properties: * `id`: the id of the incident * `activityId`: the activity id in which the incident occurred")
  @JsonIgnore

  public List<ActivityInstanceIncidentDto> getIncidents() {
        return incidents.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_INCIDENTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<ActivityInstanceIncidentDto>> getIncidents_JsonNullable() {
    return incidents;
  }
  
  @JsonProperty(JSON_PROPERTY_INCIDENTS)
  public void setIncidents_JsonNullable(JsonNullable<List<ActivityInstanceIncidentDto>> incidents) {
    this.incidents = incidents;
  }

  public void setIncidents(List<ActivityInstanceIncidentDto> incidents) {
    this.incidents = JsonNullable.<List<ActivityInstanceIncidentDto>>of(incidents);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ActivityInstanceDto activityInstanceDto = (ActivityInstanceDto) o;
    return Objects.equals(this.id, activityInstanceDto.id) &&
        Objects.equals(this.parentActivityInstanceId, activityInstanceDto.parentActivityInstanceId) &&
        Objects.equals(this.activityId, activityInstanceDto.activityId) &&
        Objects.equals(this.activityName, activityInstanceDto.activityName) &&
        Objects.equals(this.activityType, activityInstanceDto.activityType) &&
        Objects.equals(this.processInstanceId, activityInstanceDto.processInstanceId) &&
        Objects.equals(this.processDefinitionId, activityInstanceDto.processDefinitionId) &&
        Objects.equals(this.childActivityInstances, activityInstanceDto.childActivityInstances) &&
        Objects.equals(this.childTransitionInstances, activityInstanceDto.childTransitionInstances) &&
        Objects.equals(this.executionIds, activityInstanceDto.executionIds) &&
        Objects.equals(this.incidentIds, activityInstanceDto.incidentIds) &&
        Objects.equals(this.incidents, activityInstanceDto.incidents);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, parentActivityInstanceId, activityId, activityName, activityType, processInstanceId, processDefinitionId, childActivityInstances, childTransitionInstances, executionIds, incidentIds, incidents);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ActivityInstanceDto {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    parentActivityInstanceId: ").append(toIndentedString(parentActivityInstanceId)).append("\n");
    sb.append("    activityId: ").append(toIndentedString(activityId)).append("\n");
    sb.append("    activityName: ").append(toIndentedString(activityName)).append("\n");
    sb.append("    activityType: ").append(toIndentedString(activityType)).append("\n");
    sb.append("    processInstanceId: ").append(toIndentedString(processInstanceId)).append("\n");
    sb.append("    processDefinitionId: ").append(toIndentedString(processDefinitionId)).append("\n");
    sb.append("    childActivityInstances: ").append(toIndentedString(childActivityInstances)).append("\n");
    sb.append("    childTransitionInstances: ").append(toIndentedString(childTransitionInstances)).append("\n");
    sb.append("    executionIds: ").append(toIndentedString(executionIds)).append("\n");
    sb.append("    incidentIds: ").append(toIndentedString(incidentIds)).append("\n");
    sb.append("    incidents: ").append(toIndentedString(incidents)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

