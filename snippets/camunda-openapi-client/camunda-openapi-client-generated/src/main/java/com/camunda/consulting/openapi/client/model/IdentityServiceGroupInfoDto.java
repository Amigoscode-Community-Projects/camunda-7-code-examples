/*
 * Camunda Platform REST API
 * OpenApi Spec for Camunda Platform REST API.
 *
 * The version of the OpenAPI document: 7.16.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.camunda.consulting.openapi.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.camunda.consulting.openapi.client.model.IdentityServiceGroupDto;
import com.camunda.consulting.openapi.client.model.IdentityServiceUserDto;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;

/**
 * IdentityServiceGroupInfoDto
 */
@JsonPropertyOrder({
  IdentityServiceGroupInfoDto.JSON_PROPERTY_GROUPS,
  IdentityServiceGroupInfoDto.JSON_PROPERTY_GROUP_USERS
})
@JsonTypeName("IdentityServiceGroupInfoDto")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-10-13T17:49:51.183809+02:00[Europe/Berlin]")
public class IdentityServiceGroupInfoDto {
  public static final String JSON_PROPERTY_GROUPS = "groups";
  private List<IdentityServiceGroupDto> groups = null;

  public static final String JSON_PROPERTY_GROUP_USERS = "groupUsers";
  private List<IdentityServiceUserDto> groupUsers = null;


  public IdentityServiceGroupInfoDto groups(List<IdentityServiceGroupDto> groups) {
    
    this.groups = groups;
    return this;
  }

  public IdentityServiceGroupInfoDto addGroupsItem(IdentityServiceGroupDto groupsItem) {
    if (this.groups == null) {
      this.groups = new ArrayList<>();
    }
    this.groups.add(groupsItem);
    return this;
  }

   /**
   * An array of group objects.
   * @return groups
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "An array of group objects.")
  @JsonProperty(JSON_PROPERTY_GROUPS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<IdentityServiceGroupDto> getGroups() {
    return groups;
  }


  public void setGroups(List<IdentityServiceGroupDto> groups) {
    this.groups = groups;
  }


  public IdentityServiceGroupInfoDto groupUsers(List<IdentityServiceUserDto> groupUsers) {
    
    this.groupUsers = groupUsers;
    return this;
  }

  public IdentityServiceGroupInfoDto addGroupUsersItem(IdentityServiceUserDto groupUsersItem) {
    if (this.groupUsers == null) {
      this.groupUsers = new ArrayList<>();
    }
    this.groupUsers.add(groupUsersItem);
    return this;
  }

   /**
   * An array that contains all users that are member in one of the groups.
   * @return groupUsers
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "An array that contains all users that are member in one of the groups.")
  @JsonProperty(JSON_PROPERTY_GROUP_USERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<IdentityServiceUserDto> getGroupUsers() {
    return groupUsers;
  }


  public void setGroupUsers(List<IdentityServiceUserDto> groupUsers) {
    this.groupUsers = groupUsers;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    IdentityServiceGroupInfoDto identityServiceGroupInfoDto = (IdentityServiceGroupInfoDto) o;
    return Objects.equals(this.groups, identityServiceGroupInfoDto.groups) &&
        Objects.equals(this.groupUsers, identityServiceGroupInfoDto.groupUsers);
  }

  @Override
  public int hashCode() {
    return Objects.hash(groups, groupUsers);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class IdentityServiceGroupInfoDto {\n");
    sb.append("    groups: ").append(toIndentedString(groups)).append("\n");
    sb.append("    groupUsers: ").append(toIndentedString(groupUsers)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

