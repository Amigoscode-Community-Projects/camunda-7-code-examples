/*
 * Camunda Platform REST API
 * OpenApi Spec for Camunda Platform REST API.
 *
 * The version of the OpenAPI document: 7.16.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.camunda.consulting.openapi.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;

/**
 * A historic decision instance query which defines a list of historic decision instances
 */
@ApiModel(description = "A historic decision instance query which defines a list of historic decision instances")
@JsonPropertyOrder({
  HistoricDecisionInstanceQueryDto.JSON_PROPERTY_DECISION_INSTANCE_ID,
  HistoricDecisionInstanceQueryDto.JSON_PROPERTY_DECISION_INSTANCE_ID_IN,
  HistoricDecisionInstanceQueryDto.JSON_PROPERTY_DECISION_DEFINITION_ID,
  HistoricDecisionInstanceQueryDto.JSON_PROPERTY_DECISION_DEFINITION_ID_IN,
  HistoricDecisionInstanceQueryDto.JSON_PROPERTY_DECISION_DEFINITION_KEY,
  HistoricDecisionInstanceQueryDto.JSON_PROPERTY_DECISION_DEFINITION_KEY_IN,
  HistoricDecisionInstanceQueryDto.JSON_PROPERTY_DECISION_DEFINITION_NAME,
  HistoricDecisionInstanceQueryDto.JSON_PROPERTY_DECISION_DEFINITION_NAME_LIKE,
  HistoricDecisionInstanceQueryDto.JSON_PROPERTY_PROCESS_DEFINITION_ID,
  HistoricDecisionInstanceQueryDto.JSON_PROPERTY_PROCESS_DEFINITION_KEY,
  HistoricDecisionInstanceQueryDto.JSON_PROPERTY_PROCESS_INSTANCE_ID,
  HistoricDecisionInstanceQueryDto.JSON_PROPERTY_CASE_DEFINITION_ID,
  HistoricDecisionInstanceQueryDto.JSON_PROPERTY_CASE_DEFINITION_KEY,
  HistoricDecisionInstanceQueryDto.JSON_PROPERTY_CASE_INSTANCE_ID,
  HistoricDecisionInstanceQueryDto.JSON_PROPERTY_ACTIVITY_ID_IN,
  HistoricDecisionInstanceQueryDto.JSON_PROPERTY_ACTIVITY_INSTANCE_ID_IN,
  HistoricDecisionInstanceQueryDto.JSON_PROPERTY_TENANT_ID_IN,
  HistoricDecisionInstanceQueryDto.JSON_PROPERTY_WITHOUT_TENANT_ID,
  HistoricDecisionInstanceQueryDto.JSON_PROPERTY_EVALUATED_BEFORE,
  HistoricDecisionInstanceQueryDto.JSON_PROPERTY_EVALUATED_AFTER,
  HistoricDecisionInstanceQueryDto.JSON_PROPERTY_USER_ID,
  HistoricDecisionInstanceQueryDto.JSON_PROPERTY_ROOT_DECISION_INSTANCE_ID,
  HistoricDecisionInstanceQueryDto.JSON_PROPERTY_ROOT_DECISION_INSTANCES_ONLY,
  HistoricDecisionInstanceQueryDto.JSON_PROPERTY_DECISION_REQUIREMENTS_DEFINITION_ID,
  HistoricDecisionInstanceQueryDto.JSON_PROPERTY_DECISION_REQUIREMENTS_DEFINITION_KEY,
  HistoricDecisionInstanceQueryDto.JSON_PROPERTY_INCLUDE_INPUTS,
  HistoricDecisionInstanceQueryDto.JSON_PROPERTY_INCLUDE_OUTPUTS,
  HistoricDecisionInstanceQueryDto.JSON_PROPERTY_DISABLE_BINARY_FETCHING,
  HistoricDecisionInstanceQueryDto.JSON_PROPERTY_DISABLE_CUSTOM_OBJECT_DESERIALIZATION
})
@JsonTypeName("HistoricDecisionInstanceQueryDto")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-10-13T16:56:52.297572+02:00[Europe/Berlin]")
public class HistoricDecisionInstanceQueryDto {
  public static final String JSON_PROPERTY_DECISION_INSTANCE_ID = "decisionInstanceId";
  private JsonNullable<String> decisionInstanceId = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_DECISION_INSTANCE_ID_IN = "decisionInstanceIdIn";
  private JsonNullable<List<String>> decisionInstanceIdIn = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_DECISION_DEFINITION_ID = "decisionDefinitionId";
  private JsonNullable<String> decisionDefinitionId = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_DECISION_DEFINITION_ID_IN = "decisionDefinitionIdIn";
  private JsonNullable<List<String>> decisionDefinitionIdIn = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_DECISION_DEFINITION_KEY = "decisionDefinitionKey";
  private JsonNullable<String> decisionDefinitionKey = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_DECISION_DEFINITION_KEY_IN = "decisionDefinitionKeyIn";
  private JsonNullable<List<String>> decisionDefinitionKeyIn = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_DECISION_DEFINITION_NAME = "decisionDefinitionName";
  private JsonNullable<String> decisionDefinitionName = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_DECISION_DEFINITION_NAME_LIKE = "decisionDefinitionNameLike";
  private JsonNullable<String> decisionDefinitionNameLike = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_PROCESS_DEFINITION_ID = "processDefinitionId";
  private JsonNullable<String> processDefinitionId = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_PROCESS_DEFINITION_KEY = "processDefinitionKey";
  private JsonNullable<String> processDefinitionKey = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_PROCESS_INSTANCE_ID = "processInstanceId";
  private JsonNullable<String> processInstanceId = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_CASE_DEFINITION_ID = "caseDefinitionId";
  private JsonNullable<String> caseDefinitionId = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_CASE_DEFINITION_KEY = "caseDefinitionKey";
  private JsonNullable<String> caseDefinitionKey = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_CASE_INSTANCE_ID = "caseInstanceId";
  private JsonNullable<String> caseInstanceId = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ACTIVITY_ID_IN = "activityIdIn";
  private JsonNullable<List<String>> activityIdIn = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_ACTIVITY_INSTANCE_ID_IN = "activityInstanceIdIn";
  private JsonNullable<List<String>> activityInstanceIdIn = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_TENANT_ID_IN = "tenantIdIn";
  private JsonNullable<List<String>> tenantIdIn = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_WITHOUT_TENANT_ID = "withoutTenantId";
  private JsonNullable<Boolean> withoutTenantId = JsonNullable.<Boolean>undefined();

  public static final String JSON_PROPERTY_EVALUATED_BEFORE = "evaluatedBefore";
  private JsonNullable<OffsetDateTime> evaluatedBefore = JsonNullable.<OffsetDateTime>undefined();

  public static final String JSON_PROPERTY_EVALUATED_AFTER = "evaluatedAfter";
  private JsonNullable<OffsetDateTime> evaluatedAfter = JsonNullable.<OffsetDateTime>undefined();

  public static final String JSON_PROPERTY_USER_ID = "userId";
  private JsonNullable<String> userId = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ROOT_DECISION_INSTANCE_ID = "rootDecisionInstanceId";
  private JsonNullable<String> rootDecisionInstanceId = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ROOT_DECISION_INSTANCES_ONLY = "rootDecisionInstancesOnly";
  private JsonNullable<Boolean> rootDecisionInstancesOnly = JsonNullable.<Boolean>undefined();

  public static final String JSON_PROPERTY_DECISION_REQUIREMENTS_DEFINITION_ID = "decisionRequirementsDefinitionId";
  private JsonNullable<String> decisionRequirementsDefinitionId = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_DECISION_REQUIREMENTS_DEFINITION_KEY = "decisionRequirementsDefinitionKey";
  private JsonNullable<String> decisionRequirementsDefinitionKey = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_INCLUDE_INPUTS = "includeInputs";
  private JsonNullable<Boolean> includeInputs = JsonNullable.<Boolean>undefined();

  public static final String JSON_PROPERTY_INCLUDE_OUTPUTS = "includeOutputs";
  private JsonNullable<Boolean> includeOutputs = JsonNullable.<Boolean>undefined();

  public static final String JSON_PROPERTY_DISABLE_BINARY_FETCHING = "disableBinaryFetching";
  private JsonNullable<Boolean> disableBinaryFetching = JsonNullable.<Boolean>undefined();

  public static final String JSON_PROPERTY_DISABLE_CUSTOM_OBJECT_DESERIALIZATION = "disableCustomObjectDeserialization";
  private JsonNullable<Boolean> disableCustomObjectDeserialization = JsonNullable.<Boolean>undefined();


  public HistoricDecisionInstanceQueryDto decisionInstanceId(String decisionInstanceId) {
    this.decisionInstanceId = JsonNullable.<String>of(decisionInstanceId);
    
    return this;
  }

   /**
   * Filter by decision instance id.
   * @return decisionInstanceId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Filter by decision instance id.")
  @JsonIgnore

  public String getDecisionInstanceId() {
        return decisionInstanceId.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_DECISION_INSTANCE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getDecisionInstanceId_JsonNullable() {
    return decisionInstanceId;
  }
  
  @JsonProperty(JSON_PROPERTY_DECISION_INSTANCE_ID)
  public void setDecisionInstanceId_JsonNullable(JsonNullable<String> decisionInstanceId) {
    this.decisionInstanceId = decisionInstanceId;
  }

  public void setDecisionInstanceId(String decisionInstanceId) {
    this.decisionInstanceId = JsonNullable.<String>of(decisionInstanceId);
  }


  public HistoricDecisionInstanceQueryDto decisionInstanceIdIn(List<String> decisionInstanceIdIn) {
    this.decisionInstanceIdIn = JsonNullable.<List<String>>of(decisionInstanceIdIn);
    
    return this;
  }

  public HistoricDecisionInstanceQueryDto addDecisionInstanceIdInItem(String decisionInstanceIdInItem) {
    if (this.decisionInstanceIdIn == null || !this.decisionInstanceIdIn.isPresent()) {
      this.decisionInstanceIdIn = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.decisionInstanceIdIn.get().add(decisionInstanceIdInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Filter by decision instance ids. Must be a comma-separated list of decision instance ids.
   * @return decisionInstanceIdIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Filter by decision instance ids. Must be a comma-separated list of decision instance ids.")
  @JsonIgnore

  public List<String> getDecisionInstanceIdIn() {
        return decisionInstanceIdIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_DECISION_INSTANCE_ID_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getDecisionInstanceIdIn_JsonNullable() {
    return decisionInstanceIdIn;
  }
  
  @JsonProperty(JSON_PROPERTY_DECISION_INSTANCE_ID_IN)
  public void setDecisionInstanceIdIn_JsonNullable(JsonNullable<List<String>> decisionInstanceIdIn) {
    this.decisionInstanceIdIn = decisionInstanceIdIn;
  }

  public void setDecisionInstanceIdIn(List<String> decisionInstanceIdIn) {
    this.decisionInstanceIdIn = JsonNullable.<List<String>>of(decisionInstanceIdIn);
  }


  public HistoricDecisionInstanceQueryDto decisionDefinitionId(String decisionDefinitionId) {
    this.decisionDefinitionId = JsonNullable.<String>of(decisionDefinitionId);
    
    return this;
  }

   /**
   * Filter by the decision definition the instances belongs to.
   * @return decisionDefinitionId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Filter by the decision definition the instances belongs to.")
  @JsonIgnore

  public String getDecisionDefinitionId() {
        return decisionDefinitionId.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_DECISION_DEFINITION_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getDecisionDefinitionId_JsonNullable() {
    return decisionDefinitionId;
  }
  
  @JsonProperty(JSON_PROPERTY_DECISION_DEFINITION_ID)
  public void setDecisionDefinitionId_JsonNullable(JsonNullable<String> decisionDefinitionId) {
    this.decisionDefinitionId = decisionDefinitionId;
  }

  public void setDecisionDefinitionId(String decisionDefinitionId) {
    this.decisionDefinitionId = JsonNullable.<String>of(decisionDefinitionId);
  }


  public HistoricDecisionInstanceQueryDto decisionDefinitionIdIn(List<String> decisionDefinitionIdIn) {
    this.decisionDefinitionIdIn = JsonNullable.<List<String>>of(decisionDefinitionIdIn);
    
    return this;
  }

  public HistoricDecisionInstanceQueryDto addDecisionDefinitionIdInItem(String decisionDefinitionIdInItem) {
    if (this.decisionDefinitionIdIn == null || !this.decisionDefinitionIdIn.isPresent()) {
      this.decisionDefinitionIdIn = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.decisionDefinitionIdIn.get().add(decisionDefinitionIdInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Filter by the decision definitions the instances belongs to. Must be a comma-separated list of decision definition ids.
   * @return decisionDefinitionIdIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Filter by the decision definitions the instances belongs to. Must be a comma-separated list of decision definition ids.")
  @JsonIgnore

  public List<String> getDecisionDefinitionIdIn() {
        return decisionDefinitionIdIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_DECISION_DEFINITION_ID_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getDecisionDefinitionIdIn_JsonNullable() {
    return decisionDefinitionIdIn;
  }
  
  @JsonProperty(JSON_PROPERTY_DECISION_DEFINITION_ID_IN)
  public void setDecisionDefinitionIdIn_JsonNullable(JsonNullable<List<String>> decisionDefinitionIdIn) {
    this.decisionDefinitionIdIn = decisionDefinitionIdIn;
  }

  public void setDecisionDefinitionIdIn(List<String> decisionDefinitionIdIn) {
    this.decisionDefinitionIdIn = JsonNullable.<List<String>>of(decisionDefinitionIdIn);
  }


  public HistoricDecisionInstanceQueryDto decisionDefinitionKey(String decisionDefinitionKey) {
    this.decisionDefinitionKey = JsonNullable.<String>of(decisionDefinitionKey);
    
    return this;
  }

   /**
   * Filter by the key of the decision definition the instances belongs to.
   * @return decisionDefinitionKey
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Filter by the key of the decision definition the instances belongs to.")
  @JsonIgnore

  public String getDecisionDefinitionKey() {
        return decisionDefinitionKey.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_DECISION_DEFINITION_KEY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getDecisionDefinitionKey_JsonNullable() {
    return decisionDefinitionKey;
  }
  
  @JsonProperty(JSON_PROPERTY_DECISION_DEFINITION_KEY)
  public void setDecisionDefinitionKey_JsonNullable(JsonNullable<String> decisionDefinitionKey) {
    this.decisionDefinitionKey = decisionDefinitionKey;
  }

  public void setDecisionDefinitionKey(String decisionDefinitionKey) {
    this.decisionDefinitionKey = JsonNullable.<String>of(decisionDefinitionKey);
  }


  public HistoricDecisionInstanceQueryDto decisionDefinitionKeyIn(List<String> decisionDefinitionKeyIn) {
    this.decisionDefinitionKeyIn = JsonNullable.<List<String>>of(decisionDefinitionKeyIn);
    
    return this;
  }

  public HistoricDecisionInstanceQueryDto addDecisionDefinitionKeyInItem(String decisionDefinitionKeyInItem) {
    if (this.decisionDefinitionKeyIn == null || !this.decisionDefinitionKeyIn.isPresent()) {
      this.decisionDefinitionKeyIn = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.decisionDefinitionKeyIn.get().add(decisionDefinitionKeyInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Filter by the keys of the decision definition the instances belongs to. Must be a comma- separated list of decision definition keys.
   * @return decisionDefinitionKeyIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Filter by the keys of the decision definition the instances belongs to. Must be a comma- separated list of decision definition keys.")
  @JsonIgnore

  public List<String> getDecisionDefinitionKeyIn() {
        return decisionDefinitionKeyIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_DECISION_DEFINITION_KEY_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getDecisionDefinitionKeyIn_JsonNullable() {
    return decisionDefinitionKeyIn;
  }
  
  @JsonProperty(JSON_PROPERTY_DECISION_DEFINITION_KEY_IN)
  public void setDecisionDefinitionKeyIn_JsonNullable(JsonNullable<List<String>> decisionDefinitionKeyIn) {
    this.decisionDefinitionKeyIn = decisionDefinitionKeyIn;
  }

  public void setDecisionDefinitionKeyIn(List<String> decisionDefinitionKeyIn) {
    this.decisionDefinitionKeyIn = JsonNullable.<List<String>>of(decisionDefinitionKeyIn);
  }


  public HistoricDecisionInstanceQueryDto decisionDefinitionName(String decisionDefinitionName) {
    this.decisionDefinitionName = JsonNullable.<String>of(decisionDefinitionName);
    
    return this;
  }

   /**
   * Filter by the name of the decision definition the instances belongs to.
   * @return decisionDefinitionName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Filter by the name of the decision definition the instances belongs to.")
  @JsonIgnore

  public String getDecisionDefinitionName() {
        return decisionDefinitionName.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_DECISION_DEFINITION_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getDecisionDefinitionName_JsonNullable() {
    return decisionDefinitionName;
  }
  
  @JsonProperty(JSON_PROPERTY_DECISION_DEFINITION_NAME)
  public void setDecisionDefinitionName_JsonNullable(JsonNullable<String> decisionDefinitionName) {
    this.decisionDefinitionName = decisionDefinitionName;
  }

  public void setDecisionDefinitionName(String decisionDefinitionName) {
    this.decisionDefinitionName = JsonNullable.<String>of(decisionDefinitionName);
  }


  public HistoricDecisionInstanceQueryDto decisionDefinitionNameLike(String decisionDefinitionNameLike) {
    this.decisionDefinitionNameLike = JsonNullable.<String>of(decisionDefinitionNameLike);
    
    return this;
  }

   /**
   * Filter by the name of the decision definition the instances belongs to, that the parameter is a substring of.
   * @return decisionDefinitionNameLike
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Filter by the name of the decision definition the instances belongs to, that the parameter is a substring of.")
  @JsonIgnore

  public String getDecisionDefinitionNameLike() {
        return decisionDefinitionNameLike.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_DECISION_DEFINITION_NAME_LIKE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getDecisionDefinitionNameLike_JsonNullable() {
    return decisionDefinitionNameLike;
  }
  
  @JsonProperty(JSON_PROPERTY_DECISION_DEFINITION_NAME_LIKE)
  public void setDecisionDefinitionNameLike_JsonNullable(JsonNullable<String> decisionDefinitionNameLike) {
    this.decisionDefinitionNameLike = decisionDefinitionNameLike;
  }

  public void setDecisionDefinitionNameLike(String decisionDefinitionNameLike) {
    this.decisionDefinitionNameLike = JsonNullable.<String>of(decisionDefinitionNameLike);
  }


  public HistoricDecisionInstanceQueryDto processDefinitionId(String processDefinitionId) {
    this.processDefinitionId = JsonNullable.<String>of(processDefinitionId);
    
    return this;
  }

   /**
   * Filter by the process definition the instances belongs to.
   * @return processDefinitionId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Filter by the process definition the instances belongs to.")
  @JsonIgnore

  public String getProcessDefinitionId() {
        return processDefinitionId.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PROCESS_DEFINITION_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getProcessDefinitionId_JsonNullable() {
    return processDefinitionId;
  }
  
  @JsonProperty(JSON_PROPERTY_PROCESS_DEFINITION_ID)
  public void setProcessDefinitionId_JsonNullable(JsonNullable<String> processDefinitionId) {
    this.processDefinitionId = processDefinitionId;
  }

  public void setProcessDefinitionId(String processDefinitionId) {
    this.processDefinitionId = JsonNullable.<String>of(processDefinitionId);
  }


  public HistoricDecisionInstanceQueryDto processDefinitionKey(String processDefinitionKey) {
    this.processDefinitionKey = JsonNullable.<String>of(processDefinitionKey);
    
    return this;
  }

   /**
   * Filter by the key of the process definition the instances belongs to.
   * @return processDefinitionKey
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Filter by the key of the process definition the instances belongs to.")
  @JsonIgnore

  public String getProcessDefinitionKey() {
        return processDefinitionKey.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PROCESS_DEFINITION_KEY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getProcessDefinitionKey_JsonNullable() {
    return processDefinitionKey;
  }
  
  @JsonProperty(JSON_PROPERTY_PROCESS_DEFINITION_KEY)
  public void setProcessDefinitionKey_JsonNullable(JsonNullable<String> processDefinitionKey) {
    this.processDefinitionKey = processDefinitionKey;
  }

  public void setProcessDefinitionKey(String processDefinitionKey) {
    this.processDefinitionKey = JsonNullable.<String>of(processDefinitionKey);
  }


  public HistoricDecisionInstanceQueryDto processInstanceId(String processInstanceId) {
    this.processInstanceId = JsonNullable.<String>of(processInstanceId);
    
    return this;
  }

   /**
   * Filter by the process instance the instances belongs to.
   * @return processInstanceId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Filter by the process instance the instances belongs to.")
  @JsonIgnore

  public String getProcessInstanceId() {
        return processInstanceId.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PROCESS_INSTANCE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getProcessInstanceId_JsonNullable() {
    return processInstanceId;
  }
  
  @JsonProperty(JSON_PROPERTY_PROCESS_INSTANCE_ID)
  public void setProcessInstanceId_JsonNullable(JsonNullable<String> processInstanceId) {
    this.processInstanceId = processInstanceId;
  }

  public void setProcessInstanceId(String processInstanceId) {
    this.processInstanceId = JsonNullable.<String>of(processInstanceId);
  }


  public HistoricDecisionInstanceQueryDto caseDefinitionId(String caseDefinitionId) {
    this.caseDefinitionId = JsonNullable.<String>of(caseDefinitionId);
    
    return this;
  }

   /**
   * Filter by the case definition the instances belongs to.
   * @return caseDefinitionId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Filter by the case definition the instances belongs to.")
  @JsonIgnore

  public String getCaseDefinitionId() {
        return caseDefinitionId.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_CASE_DEFINITION_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getCaseDefinitionId_JsonNullable() {
    return caseDefinitionId;
  }
  
  @JsonProperty(JSON_PROPERTY_CASE_DEFINITION_ID)
  public void setCaseDefinitionId_JsonNullable(JsonNullable<String> caseDefinitionId) {
    this.caseDefinitionId = caseDefinitionId;
  }

  public void setCaseDefinitionId(String caseDefinitionId) {
    this.caseDefinitionId = JsonNullable.<String>of(caseDefinitionId);
  }


  public HistoricDecisionInstanceQueryDto caseDefinitionKey(String caseDefinitionKey) {
    this.caseDefinitionKey = JsonNullable.<String>of(caseDefinitionKey);
    
    return this;
  }

   /**
   * Filter by the key of the case definition the instances belongs to.
   * @return caseDefinitionKey
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Filter by the key of the case definition the instances belongs to.")
  @JsonIgnore

  public String getCaseDefinitionKey() {
        return caseDefinitionKey.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_CASE_DEFINITION_KEY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getCaseDefinitionKey_JsonNullable() {
    return caseDefinitionKey;
  }
  
  @JsonProperty(JSON_PROPERTY_CASE_DEFINITION_KEY)
  public void setCaseDefinitionKey_JsonNullable(JsonNullable<String> caseDefinitionKey) {
    this.caseDefinitionKey = caseDefinitionKey;
  }

  public void setCaseDefinitionKey(String caseDefinitionKey) {
    this.caseDefinitionKey = JsonNullable.<String>of(caseDefinitionKey);
  }


  public HistoricDecisionInstanceQueryDto caseInstanceId(String caseInstanceId) {
    this.caseInstanceId = JsonNullable.<String>of(caseInstanceId);
    
    return this;
  }

   /**
   * Filter by the case instance the instances belongs to.
   * @return caseInstanceId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Filter by the case instance the instances belongs to.")
  @JsonIgnore

  public String getCaseInstanceId() {
        return caseInstanceId.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_CASE_INSTANCE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getCaseInstanceId_JsonNullable() {
    return caseInstanceId;
  }
  
  @JsonProperty(JSON_PROPERTY_CASE_INSTANCE_ID)
  public void setCaseInstanceId_JsonNullable(JsonNullable<String> caseInstanceId) {
    this.caseInstanceId = caseInstanceId;
  }

  public void setCaseInstanceId(String caseInstanceId) {
    this.caseInstanceId = JsonNullable.<String>of(caseInstanceId);
  }


  public HistoricDecisionInstanceQueryDto activityIdIn(List<String> activityIdIn) {
    this.activityIdIn = JsonNullable.<List<String>>of(activityIdIn);
    
    return this;
  }

  public HistoricDecisionInstanceQueryDto addActivityIdInItem(String activityIdInItem) {
    if (this.activityIdIn == null || !this.activityIdIn.isPresent()) {
      this.activityIdIn = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.activityIdIn.get().add(activityIdInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Filter by the activity ids the instances belongs to. Must be a comma-separated list of acitvity ids.
   * @return activityIdIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Filter by the activity ids the instances belongs to. Must be a comma-separated list of acitvity ids.")
  @JsonIgnore

  public List<String> getActivityIdIn() {
        return activityIdIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ACTIVITY_ID_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getActivityIdIn_JsonNullable() {
    return activityIdIn;
  }
  
  @JsonProperty(JSON_PROPERTY_ACTIVITY_ID_IN)
  public void setActivityIdIn_JsonNullable(JsonNullable<List<String>> activityIdIn) {
    this.activityIdIn = activityIdIn;
  }

  public void setActivityIdIn(List<String> activityIdIn) {
    this.activityIdIn = JsonNullable.<List<String>>of(activityIdIn);
  }


  public HistoricDecisionInstanceQueryDto activityInstanceIdIn(List<String> activityInstanceIdIn) {
    this.activityInstanceIdIn = JsonNullable.<List<String>>of(activityInstanceIdIn);
    
    return this;
  }

  public HistoricDecisionInstanceQueryDto addActivityInstanceIdInItem(String activityInstanceIdInItem) {
    if (this.activityInstanceIdIn == null || !this.activityInstanceIdIn.isPresent()) {
      this.activityInstanceIdIn = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.activityInstanceIdIn.get().add(activityInstanceIdInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Filter by the activity instance ids the instances belongs to. Must be a comma-separated list of acitvity instance ids.
   * @return activityInstanceIdIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Filter by the activity instance ids the instances belongs to. Must be a comma-separated list of acitvity instance ids.")
  @JsonIgnore

  public List<String> getActivityInstanceIdIn() {
        return activityInstanceIdIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ACTIVITY_INSTANCE_ID_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getActivityInstanceIdIn_JsonNullable() {
    return activityInstanceIdIn;
  }
  
  @JsonProperty(JSON_PROPERTY_ACTIVITY_INSTANCE_ID_IN)
  public void setActivityInstanceIdIn_JsonNullable(JsonNullable<List<String>> activityInstanceIdIn) {
    this.activityInstanceIdIn = activityInstanceIdIn;
  }

  public void setActivityInstanceIdIn(List<String> activityInstanceIdIn) {
    this.activityInstanceIdIn = JsonNullable.<List<String>>of(activityInstanceIdIn);
  }


  public HistoricDecisionInstanceQueryDto tenantIdIn(List<String> tenantIdIn) {
    this.tenantIdIn = JsonNullable.<List<String>>of(tenantIdIn);
    
    return this;
  }

  public HistoricDecisionInstanceQueryDto addTenantIdInItem(String tenantIdInItem) {
    if (this.tenantIdIn == null || !this.tenantIdIn.isPresent()) {
      this.tenantIdIn = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.tenantIdIn.get().add(tenantIdInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Filter by a comma-separated list of tenant ids. A historic decision instance must have one of the given tenant ids.
   * @return tenantIdIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Filter by a comma-separated list of tenant ids. A historic decision instance must have one of the given tenant ids.")
  @JsonIgnore

  public List<String> getTenantIdIn() {
        return tenantIdIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_TENANT_ID_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getTenantIdIn_JsonNullable() {
    return tenantIdIn;
  }
  
  @JsonProperty(JSON_PROPERTY_TENANT_ID_IN)
  public void setTenantIdIn_JsonNullable(JsonNullable<List<String>> tenantIdIn) {
    this.tenantIdIn = tenantIdIn;
  }

  public void setTenantIdIn(List<String> tenantIdIn) {
    this.tenantIdIn = JsonNullable.<List<String>>of(tenantIdIn);
  }


  public HistoricDecisionInstanceQueryDto withoutTenantId(Boolean withoutTenantId) {
    this.withoutTenantId = JsonNullable.<Boolean>of(withoutTenantId);
    
    return this;
  }

   /**
   * Only include historic decision instances that belong to no tenant. Value may only be &#x60;true&#x60;, as &#x60;false&#x60; is the default behavior.
   * @return withoutTenantId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Only include historic decision instances that belong to no tenant. Value may only be `true`, as `false` is the default behavior.")
  @JsonIgnore

  public Boolean getWithoutTenantId() {
        return withoutTenantId.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_WITHOUT_TENANT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Boolean> getWithoutTenantId_JsonNullable() {
    return withoutTenantId;
  }
  
  @JsonProperty(JSON_PROPERTY_WITHOUT_TENANT_ID)
  public void setWithoutTenantId_JsonNullable(JsonNullable<Boolean> withoutTenantId) {
    this.withoutTenantId = withoutTenantId;
  }

  public void setWithoutTenantId(Boolean withoutTenantId) {
    this.withoutTenantId = JsonNullable.<Boolean>of(withoutTenantId);
  }


  public HistoricDecisionInstanceQueryDto evaluatedBefore(OffsetDateTime evaluatedBefore) {
    this.evaluatedBefore = JsonNullable.<OffsetDateTime>of(evaluatedBefore);
    
    return this;
  }

   /**
   * Restrict to instances that were evaluated before the given date. By [default](https://docs.camunda.org/manual/7.16/reference/rest/overview/date-format/), the date must have the format &#x60;yyyy-MM- dd&#39;T&#39;HH:mm:ss.SSSZ&#x60;, e.g., &#x60;2013-01-23T14:42:45.000+0200&#x60;.
   * @return evaluatedBefore
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Restrict to instances that were evaluated before the given date. By [default](https://docs.camunda.org/manual/7.16/reference/rest/overview/date-format/), the date must have the format `yyyy-MM- dd'T'HH:mm:ss.SSSZ`, e.g., `2013-01-23T14:42:45.000+0200`.")
  @JsonIgnore

  public OffsetDateTime getEvaluatedBefore() {
        return evaluatedBefore.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_EVALUATED_BEFORE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<OffsetDateTime> getEvaluatedBefore_JsonNullable() {
    return evaluatedBefore;
  }
  
  @JsonProperty(JSON_PROPERTY_EVALUATED_BEFORE)
  public void setEvaluatedBefore_JsonNullable(JsonNullable<OffsetDateTime> evaluatedBefore) {
    this.evaluatedBefore = evaluatedBefore;
  }

  public void setEvaluatedBefore(OffsetDateTime evaluatedBefore) {
    this.evaluatedBefore = JsonNullable.<OffsetDateTime>of(evaluatedBefore);
  }


  public HistoricDecisionInstanceQueryDto evaluatedAfter(OffsetDateTime evaluatedAfter) {
    this.evaluatedAfter = JsonNullable.<OffsetDateTime>of(evaluatedAfter);
    
    return this;
  }

   /**
   * Restrict to instances that were evaluated after the given date. By [default](https://docs.camunda.org/manual/7.16/reference/rest/overview/date-format/), the date must have the format &#x60;yyyy-MM- dd&#39;T&#39;HH:mm:ss.SSSZ&#x60;, e.g., &#x60;2013-01-23T14:42:45.000+0200&#x60;.
   * @return evaluatedAfter
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Restrict to instances that were evaluated after the given date. By [default](https://docs.camunda.org/manual/7.16/reference/rest/overview/date-format/), the date must have the format `yyyy-MM- dd'T'HH:mm:ss.SSSZ`, e.g., `2013-01-23T14:42:45.000+0200`.")
  @JsonIgnore

  public OffsetDateTime getEvaluatedAfter() {
        return evaluatedAfter.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_EVALUATED_AFTER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<OffsetDateTime> getEvaluatedAfter_JsonNullable() {
    return evaluatedAfter;
  }
  
  @JsonProperty(JSON_PROPERTY_EVALUATED_AFTER)
  public void setEvaluatedAfter_JsonNullable(JsonNullable<OffsetDateTime> evaluatedAfter) {
    this.evaluatedAfter = evaluatedAfter;
  }

  public void setEvaluatedAfter(OffsetDateTime evaluatedAfter) {
    this.evaluatedAfter = JsonNullable.<OffsetDateTime>of(evaluatedAfter);
  }


  public HistoricDecisionInstanceQueryDto userId(String userId) {
    this.userId = JsonNullable.<String>of(userId);
    
    return this;
  }

   /**
   * Restrict to instances that were evaluated by the given user.
   * @return userId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Restrict to instances that were evaluated by the given user.")
  @JsonIgnore

  public String getUserId() {
        return userId.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_USER_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getUserId_JsonNullable() {
    return userId;
  }
  
  @JsonProperty(JSON_PROPERTY_USER_ID)
  public void setUserId_JsonNullable(JsonNullable<String> userId) {
    this.userId = userId;
  }

  public void setUserId(String userId) {
    this.userId = JsonNullable.<String>of(userId);
  }


  public HistoricDecisionInstanceQueryDto rootDecisionInstanceId(String rootDecisionInstanceId) {
    this.rootDecisionInstanceId = JsonNullable.<String>of(rootDecisionInstanceId);
    
    return this;
  }

   /**
   * Restrict to instances that have a given root decision instance id. This also includes the decision instance with the given id.
   * @return rootDecisionInstanceId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Restrict to instances that have a given root decision instance id. This also includes the decision instance with the given id.")
  @JsonIgnore

  public String getRootDecisionInstanceId() {
        return rootDecisionInstanceId.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ROOT_DECISION_INSTANCE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getRootDecisionInstanceId_JsonNullable() {
    return rootDecisionInstanceId;
  }
  
  @JsonProperty(JSON_PROPERTY_ROOT_DECISION_INSTANCE_ID)
  public void setRootDecisionInstanceId_JsonNullable(JsonNullable<String> rootDecisionInstanceId) {
    this.rootDecisionInstanceId = rootDecisionInstanceId;
  }

  public void setRootDecisionInstanceId(String rootDecisionInstanceId) {
    this.rootDecisionInstanceId = JsonNullable.<String>of(rootDecisionInstanceId);
  }


  public HistoricDecisionInstanceQueryDto rootDecisionInstancesOnly(Boolean rootDecisionInstancesOnly) {
    this.rootDecisionInstancesOnly = JsonNullable.<Boolean>of(rootDecisionInstancesOnly);
    
    return this;
  }

   /**
   * Restrict to instances those are the root decision instance of an evaluation. Value may only be &#x60;true&#x60;, as &#x60;false&#x60; is the default behavior.
   * @return rootDecisionInstancesOnly
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Restrict to instances those are the root decision instance of an evaluation. Value may only be `true`, as `false` is the default behavior.")
  @JsonIgnore

  public Boolean getRootDecisionInstancesOnly() {
        return rootDecisionInstancesOnly.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ROOT_DECISION_INSTANCES_ONLY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Boolean> getRootDecisionInstancesOnly_JsonNullable() {
    return rootDecisionInstancesOnly;
  }
  
  @JsonProperty(JSON_PROPERTY_ROOT_DECISION_INSTANCES_ONLY)
  public void setRootDecisionInstancesOnly_JsonNullable(JsonNullable<Boolean> rootDecisionInstancesOnly) {
    this.rootDecisionInstancesOnly = rootDecisionInstancesOnly;
  }

  public void setRootDecisionInstancesOnly(Boolean rootDecisionInstancesOnly) {
    this.rootDecisionInstancesOnly = JsonNullable.<Boolean>of(rootDecisionInstancesOnly);
  }


  public HistoricDecisionInstanceQueryDto decisionRequirementsDefinitionId(String decisionRequirementsDefinitionId) {
    this.decisionRequirementsDefinitionId = JsonNullable.<String>of(decisionRequirementsDefinitionId);
    
    return this;
  }

   /**
   * Filter by the decision requirements definition the instances belongs to.
   * @return decisionRequirementsDefinitionId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Filter by the decision requirements definition the instances belongs to.")
  @JsonIgnore

  public String getDecisionRequirementsDefinitionId() {
        return decisionRequirementsDefinitionId.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_DECISION_REQUIREMENTS_DEFINITION_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getDecisionRequirementsDefinitionId_JsonNullable() {
    return decisionRequirementsDefinitionId;
  }
  
  @JsonProperty(JSON_PROPERTY_DECISION_REQUIREMENTS_DEFINITION_ID)
  public void setDecisionRequirementsDefinitionId_JsonNullable(JsonNullable<String> decisionRequirementsDefinitionId) {
    this.decisionRequirementsDefinitionId = decisionRequirementsDefinitionId;
  }

  public void setDecisionRequirementsDefinitionId(String decisionRequirementsDefinitionId) {
    this.decisionRequirementsDefinitionId = JsonNullable.<String>of(decisionRequirementsDefinitionId);
  }


  public HistoricDecisionInstanceQueryDto decisionRequirementsDefinitionKey(String decisionRequirementsDefinitionKey) {
    this.decisionRequirementsDefinitionKey = JsonNullable.<String>of(decisionRequirementsDefinitionKey);
    
    return this;
  }

   /**
   * Filter by the key of the decision requirements definition the instances belongs to.
   * @return decisionRequirementsDefinitionKey
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Filter by the key of the decision requirements definition the instances belongs to.")
  @JsonIgnore

  public String getDecisionRequirementsDefinitionKey() {
        return decisionRequirementsDefinitionKey.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_DECISION_REQUIREMENTS_DEFINITION_KEY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getDecisionRequirementsDefinitionKey_JsonNullable() {
    return decisionRequirementsDefinitionKey;
  }
  
  @JsonProperty(JSON_PROPERTY_DECISION_REQUIREMENTS_DEFINITION_KEY)
  public void setDecisionRequirementsDefinitionKey_JsonNullable(JsonNullable<String> decisionRequirementsDefinitionKey) {
    this.decisionRequirementsDefinitionKey = decisionRequirementsDefinitionKey;
  }

  public void setDecisionRequirementsDefinitionKey(String decisionRequirementsDefinitionKey) {
    this.decisionRequirementsDefinitionKey = JsonNullable.<String>of(decisionRequirementsDefinitionKey);
  }


  public HistoricDecisionInstanceQueryDto includeInputs(Boolean includeInputs) {
    this.includeInputs = JsonNullable.<Boolean>of(includeInputs);
    
    return this;
  }

   /**
   * Include input values in the result. Value may only be &#x60;true&#x60;, as &#x60;false&#x60; is the default behavior.
   * @return includeInputs
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Include input values in the result. Value may only be `true`, as `false` is the default behavior.")
  @JsonIgnore

  public Boolean getIncludeInputs() {
        return includeInputs.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_INCLUDE_INPUTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Boolean> getIncludeInputs_JsonNullable() {
    return includeInputs;
  }
  
  @JsonProperty(JSON_PROPERTY_INCLUDE_INPUTS)
  public void setIncludeInputs_JsonNullable(JsonNullable<Boolean> includeInputs) {
    this.includeInputs = includeInputs;
  }

  public void setIncludeInputs(Boolean includeInputs) {
    this.includeInputs = JsonNullable.<Boolean>of(includeInputs);
  }


  public HistoricDecisionInstanceQueryDto includeOutputs(Boolean includeOutputs) {
    this.includeOutputs = JsonNullable.<Boolean>of(includeOutputs);
    
    return this;
  }

   /**
   * Include output values in the result. Value may only be &#x60;true&#x60;, as &#x60;false&#x60; is the default behavior.
   * @return includeOutputs
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Include output values in the result. Value may only be `true`, as `false` is the default behavior.")
  @JsonIgnore

  public Boolean getIncludeOutputs() {
        return includeOutputs.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_INCLUDE_OUTPUTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Boolean> getIncludeOutputs_JsonNullable() {
    return includeOutputs;
  }
  
  @JsonProperty(JSON_PROPERTY_INCLUDE_OUTPUTS)
  public void setIncludeOutputs_JsonNullable(JsonNullable<Boolean> includeOutputs) {
    this.includeOutputs = includeOutputs;
  }

  public void setIncludeOutputs(Boolean includeOutputs) {
    this.includeOutputs = JsonNullable.<Boolean>of(includeOutputs);
  }


  public HistoricDecisionInstanceQueryDto disableBinaryFetching(Boolean disableBinaryFetching) {
    this.disableBinaryFetching = JsonNullable.<Boolean>of(disableBinaryFetching);
    
    return this;
  }

   /**
   * Disables fetching of byte array input and output values. Value may only be &#x60;true&#x60;, as &#x60;false&#x60; is the default behavior.
   * @return disableBinaryFetching
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Disables fetching of byte array input and output values. Value may only be `true`, as `false` is the default behavior.")
  @JsonIgnore

  public Boolean getDisableBinaryFetching() {
        return disableBinaryFetching.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_DISABLE_BINARY_FETCHING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Boolean> getDisableBinaryFetching_JsonNullable() {
    return disableBinaryFetching;
  }
  
  @JsonProperty(JSON_PROPERTY_DISABLE_BINARY_FETCHING)
  public void setDisableBinaryFetching_JsonNullable(JsonNullable<Boolean> disableBinaryFetching) {
    this.disableBinaryFetching = disableBinaryFetching;
  }

  public void setDisableBinaryFetching(Boolean disableBinaryFetching) {
    this.disableBinaryFetching = JsonNullable.<Boolean>of(disableBinaryFetching);
  }


  public HistoricDecisionInstanceQueryDto disableCustomObjectDeserialization(Boolean disableCustomObjectDeserialization) {
    this.disableCustomObjectDeserialization = JsonNullable.<Boolean>of(disableCustomObjectDeserialization);
    
    return this;
  }

   /**
   * Disables deserialization of input and output values that are custom objects. Value may only be &#x60;true&#x60;, as &#x60;false&#x60; is the default behavior.
   * @return disableCustomObjectDeserialization
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Disables deserialization of input and output values that are custom objects. Value may only be `true`, as `false` is the default behavior.")
  @JsonIgnore

  public Boolean getDisableCustomObjectDeserialization() {
        return disableCustomObjectDeserialization.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_DISABLE_CUSTOM_OBJECT_DESERIALIZATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Boolean> getDisableCustomObjectDeserialization_JsonNullable() {
    return disableCustomObjectDeserialization;
  }
  
  @JsonProperty(JSON_PROPERTY_DISABLE_CUSTOM_OBJECT_DESERIALIZATION)
  public void setDisableCustomObjectDeserialization_JsonNullable(JsonNullable<Boolean> disableCustomObjectDeserialization) {
    this.disableCustomObjectDeserialization = disableCustomObjectDeserialization;
  }

  public void setDisableCustomObjectDeserialization(Boolean disableCustomObjectDeserialization) {
    this.disableCustomObjectDeserialization = JsonNullable.<Boolean>of(disableCustomObjectDeserialization);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    HistoricDecisionInstanceQueryDto historicDecisionInstanceQueryDto = (HistoricDecisionInstanceQueryDto) o;
    return Objects.equals(this.decisionInstanceId, historicDecisionInstanceQueryDto.decisionInstanceId) &&
        Objects.equals(this.decisionInstanceIdIn, historicDecisionInstanceQueryDto.decisionInstanceIdIn) &&
        Objects.equals(this.decisionDefinitionId, historicDecisionInstanceQueryDto.decisionDefinitionId) &&
        Objects.equals(this.decisionDefinitionIdIn, historicDecisionInstanceQueryDto.decisionDefinitionIdIn) &&
        Objects.equals(this.decisionDefinitionKey, historicDecisionInstanceQueryDto.decisionDefinitionKey) &&
        Objects.equals(this.decisionDefinitionKeyIn, historicDecisionInstanceQueryDto.decisionDefinitionKeyIn) &&
        Objects.equals(this.decisionDefinitionName, historicDecisionInstanceQueryDto.decisionDefinitionName) &&
        Objects.equals(this.decisionDefinitionNameLike, historicDecisionInstanceQueryDto.decisionDefinitionNameLike) &&
        Objects.equals(this.processDefinitionId, historicDecisionInstanceQueryDto.processDefinitionId) &&
        Objects.equals(this.processDefinitionKey, historicDecisionInstanceQueryDto.processDefinitionKey) &&
        Objects.equals(this.processInstanceId, historicDecisionInstanceQueryDto.processInstanceId) &&
        Objects.equals(this.caseDefinitionId, historicDecisionInstanceQueryDto.caseDefinitionId) &&
        Objects.equals(this.caseDefinitionKey, historicDecisionInstanceQueryDto.caseDefinitionKey) &&
        Objects.equals(this.caseInstanceId, historicDecisionInstanceQueryDto.caseInstanceId) &&
        Objects.equals(this.activityIdIn, historicDecisionInstanceQueryDto.activityIdIn) &&
        Objects.equals(this.activityInstanceIdIn, historicDecisionInstanceQueryDto.activityInstanceIdIn) &&
        Objects.equals(this.tenantIdIn, historicDecisionInstanceQueryDto.tenantIdIn) &&
        Objects.equals(this.withoutTenantId, historicDecisionInstanceQueryDto.withoutTenantId) &&
        Objects.equals(this.evaluatedBefore, historicDecisionInstanceQueryDto.evaluatedBefore) &&
        Objects.equals(this.evaluatedAfter, historicDecisionInstanceQueryDto.evaluatedAfter) &&
        Objects.equals(this.userId, historicDecisionInstanceQueryDto.userId) &&
        Objects.equals(this.rootDecisionInstanceId, historicDecisionInstanceQueryDto.rootDecisionInstanceId) &&
        Objects.equals(this.rootDecisionInstancesOnly, historicDecisionInstanceQueryDto.rootDecisionInstancesOnly) &&
        Objects.equals(this.decisionRequirementsDefinitionId, historicDecisionInstanceQueryDto.decisionRequirementsDefinitionId) &&
        Objects.equals(this.decisionRequirementsDefinitionKey, historicDecisionInstanceQueryDto.decisionRequirementsDefinitionKey) &&
        Objects.equals(this.includeInputs, historicDecisionInstanceQueryDto.includeInputs) &&
        Objects.equals(this.includeOutputs, historicDecisionInstanceQueryDto.includeOutputs) &&
        Objects.equals(this.disableBinaryFetching, historicDecisionInstanceQueryDto.disableBinaryFetching) &&
        Objects.equals(this.disableCustomObjectDeserialization, historicDecisionInstanceQueryDto.disableCustomObjectDeserialization);
  }

  @Override
  public int hashCode() {
    return Objects.hash(decisionInstanceId, decisionInstanceIdIn, decisionDefinitionId, decisionDefinitionIdIn, decisionDefinitionKey, decisionDefinitionKeyIn, decisionDefinitionName, decisionDefinitionNameLike, processDefinitionId, processDefinitionKey, processInstanceId, caseDefinitionId, caseDefinitionKey, caseInstanceId, activityIdIn, activityInstanceIdIn, tenantIdIn, withoutTenantId, evaluatedBefore, evaluatedAfter, userId, rootDecisionInstanceId, rootDecisionInstancesOnly, decisionRequirementsDefinitionId, decisionRequirementsDefinitionKey, includeInputs, includeOutputs, disableBinaryFetching, disableCustomObjectDeserialization);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class HistoricDecisionInstanceQueryDto {\n");
    sb.append("    decisionInstanceId: ").append(toIndentedString(decisionInstanceId)).append("\n");
    sb.append("    decisionInstanceIdIn: ").append(toIndentedString(decisionInstanceIdIn)).append("\n");
    sb.append("    decisionDefinitionId: ").append(toIndentedString(decisionDefinitionId)).append("\n");
    sb.append("    decisionDefinitionIdIn: ").append(toIndentedString(decisionDefinitionIdIn)).append("\n");
    sb.append("    decisionDefinitionKey: ").append(toIndentedString(decisionDefinitionKey)).append("\n");
    sb.append("    decisionDefinitionKeyIn: ").append(toIndentedString(decisionDefinitionKeyIn)).append("\n");
    sb.append("    decisionDefinitionName: ").append(toIndentedString(decisionDefinitionName)).append("\n");
    sb.append("    decisionDefinitionNameLike: ").append(toIndentedString(decisionDefinitionNameLike)).append("\n");
    sb.append("    processDefinitionId: ").append(toIndentedString(processDefinitionId)).append("\n");
    sb.append("    processDefinitionKey: ").append(toIndentedString(processDefinitionKey)).append("\n");
    sb.append("    processInstanceId: ").append(toIndentedString(processInstanceId)).append("\n");
    sb.append("    caseDefinitionId: ").append(toIndentedString(caseDefinitionId)).append("\n");
    sb.append("    caseDefinitionKey: ").append(toIndentedString(caseDefinitionKey)).append("\n");
    sb.append("    caseInstanceId: ").append(toIndentedString(caseInstanceId)).append("\n");
    sb.append("    activityIdIn: ").append(toIndentedString(activityIdIn)).append("\n");
    sb.append("    activityInstanceIdIn: ").append(toIndentedString(activityInstanceIdIn)).append("\n");
    sb.append("    tenantIdIn: ").append(toIndentedString(tenantIdIn)).append("\n");
    sb.append("    withoutTenantId: ").append(toIndentedString(withoutTenantId)).append("\n");
    sb.append("    evaluatedBefore: ").append(toIndentedString(evaluatedBefore)).append("\n");
    sb.append("    evaluatedAfter: ").append(toIndentedString(evaluatedAfter)).append("\n");
    sb.append("    userId: ").append(toIndentedString(userId)).append("\n");
    sb.append("    rootDecisionInstanceId: ").append(toIndentedString(rootDecisionInstanceId)).append("\n");
    sb.append("    rootDecisionInstancesOnly: ").append(toIndentedString(rootDecisionInstancesOnly)).append("\n");
    sb.append("    decisionRequirementsDefinitionId: ").append(toIndentedString(decisionRequirementsDefinitionId)).append("\n");
    sb.append("    decisionRequirementsDefinitionKey: ").append(toIndentedString(decisionRequirementsDefinitionKey)).append("\n");
    sb.append("    includeInputs: ").append(toIndentedString(includeInputs)).append("\n");
    sb.append("    includeOutputs: ").append(toIndentedString(includeOutputs)).append("\n");
    sb.append("    disableBinaryFetching: ").append(toIndentedString(disableBinaryFetching)).append("\n");
    sb.append("    disableCustomObjectDeserialization: ").append(toIndentedString(disableCustomObjectDeserialization)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

