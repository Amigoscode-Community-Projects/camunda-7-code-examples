/*
 * Camunda Platform REST API
 * OpenApi Spec for Camunda Platform REST API.
 *
 * The version of the OpenAPI document: 7.16.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.camunda.consulting.openapi.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.camunda.consulting.openapi.client.model.HistoricJobLogQueryDtoSorting;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;

/**
 * A Historic Job Log instance query which defines a list of Historic Job Log instances
 */
@ApiModel(description = "A Historic Job Log instance query which defines a list of Historic Job Log instances")
@JsonPropertyOrder({
  HistoricJobLogQueryDto.JSON_PROPERTY_LOG_ID,
  HistoricJobLogQueryDto.JSON_PROPERTY_JOB_ID,
  HistoricJobLogQueryDto.JSON_PROPERTY_JOB_EXCEPTION_MESSAGE,
  HistoricJobLogQueryDto.JSON_PROPERTY_JOB_DEFINITION_ID,
  HistoricJobLogQueryDto.JSON_PROPERTY_JOB_DEFINITION_TYPE,
  HistoricJobLogQueryDto.JSON_PROPERTY_JOB_DEFINITION_CONFIGURATION,
  HistoricJobLogQueryDto.JSON_PROPERTY_ACTIVITY_ID_IN,
  HistoricJobLogQueryDto.JSON_PROPERTY_FAILED_ACTIVITY_ID_IN,
  HistoricJobLogQueryDto.JSON_PROPERTY_EXECUTION_ID_IN,
  HistoricJobLogQueryDto.JSON_PROPERTY_PROCESS_INSTANCE_ID,
  HistoricJobLogQueryDto.JSON_PROPERTY_PROCESS_DEFINITION_ID,
  HistoricJobLogQueryDto.JSON_PROPERTY_PROCESS_DEFINITION_KEY,
  HistoricJobLogQueryDto.JSON_PROPERTY_DEPLOYMENT_ID,
  HistoricJobLogQueryDto.JSON_PROPERTY_TENANT_ID_IN,
  HistoricJobLogQueryDto.JSON_PROPERTY_WITHOUT_TENANT_ID,
  HistoricJobLogQueryDto.JSON_PROPERTY_HOSTNAME,
  HistoricJobLogQueryDto.JSON_PROPERTY_JOB_PRIORITY_LOWER_THAN_OR_EQUALS,
  HistoricJobLogQueryDto.JSON_PROPERTY_JOB_PRIORITY_HIGHER_THAN_OR_EQUALS,
  HistoricJobLogQueryDto.JSON_PROPERTY_CREATION_LOG,
  HistoricJobLogQueryDto.JSON_PROPERTY_FAILURE_LOG,
  HistoricJobLogQueryDto.JSON_PROPERTY_SUCCESS_LOG,
  HistoricJobLogQueryDto.JSON_PROPERTY_DELETION_LOG,
  HistoricJobLogQueryDto.JSON_PROPERTY_SORTING
})
@JsonTypeName("HistoricJobLogQueryDto")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-10-13T16:56:52.297572+02:00[Europe/Berlin]")
public class HistoricJobLogQueryDto {
  public static final String JSON_PROPERTY_LOG_ID = "logId";
  private JsonNullable<String> logId = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_JOB_ID = "jobId";
  private JsonNullable<String> jobId = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_JOB_EXCEPTION_MESSAGE = "jobExceptionMessage";
  private JsonNullable<String> jobExceptionMessage = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_JOB_DEFINITION_ID = "jobDefinitionId";
  private JsonNullable<String> jobDefinitionId = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_JOB_DEFINITION_TYPE = "jobDefinitionType";
  private JsonNullable<String> jobDefinitionType = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_JOB_DEFINITION_CONFIGURATION = "jobDefinitionConfiguration";
  private JsonNullable<String> jobDefinitionConfiguration = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ACTIVITY_ID_IN = "activityIdIn";
  private JsonNullable<List<String>> activityIdIn = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_FAILED_ACTIVITY_ID_IN = "failedActivityIdIn";
  private JsonNullable<List<String>> failedActivityIdIn = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_EXECUTION_ID_IN = "executionIdIn";
  private JsonNullable<List<String>> executionIdIn = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_PROCESS_INSTANCE_ID = "processInstanceId";
  private JsonNullable<String> processInstanceId = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_PROCESS_DEFINITION_ID = "processDefinitionId";
  private JsonNullable<String> processDefinitionId = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_PROCESS_DEFINITION_KEY = "processDefinitionKey";
  private JsonNullable<String> processDefinitionKey = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_DEPLOYMENT_ID = "deploymentId";
  private JsonNullable<String> deploymentId = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_TENANT_ID_IN = "tenantIdIn";
  private JsonNullable<List<String>> tenantIdIn = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_WITHOUT_TENANT_ID = "withoutTenantId";
  private JsonNullable<Boolean> withoutTenantId = JsonNullable.<Boolean>undefined();

  public static final String JSON_PROPERTY_HOSTNAME = "hostname";
  private JsonNullable<String> hostname = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_JOB_PRIORITY_LOWER_THAN_OR_EQUALS = "jobPriorityLowerThanOrEquals";
  private JsonNullable<Long> jobPriorityLowerThanOrEquals = JsonNullable.<Long>undefined();

  public static final String JSON_PROPERTY_JOB_PRIORITY_HIGHER_THAN_OR_EQUALS = "jobPriorityHigherThanOrEquals";
  private JsonNullable<Long> jobPriorityHigherThanOrEquals = JsonNullable.<Long>undefined();

  public static final String JSON_PROPERTY_CREATION_LOG = "creationLog";
  private JsonNullable<Boolean> creationLog = JsonNullable.<Boolean>undefined();

  public static final String JSON_PROPERTY_FAILURE_LOG = "failureLog";
  private JsonNullable<Boolean> failureLog = JsonNullable.<Boolean>undefined();

  public static final String JSON_PROPERTY_SUCCESS_LOG = "successLog";
  private JsonNullable<Boolean> successLog = JsonNullable.<Boolean>undefined();

  public static final String JSON_PROPERTY_DELETION_LOG = "deletionLog";
  private JsonNullable<Boolean> deletionLog = JsonNullable.<Boolean>undefined();

  public static final String JSON_PROPERTY_SORTING = "sorting";
  private JsonNullable<List<HistoricJobLogQueryDtoSorting>> sorting = JsonNullable.<List<HistoricJobLogQueryDtoSorting>>undefined();


  public HistoricJobLogQueryDto logId(String logId) {
    this.logId = JsonNullable.<String>of(logId);
    
    return this;
  }

   /**
   * Filter by historic job log id.
   * @return logId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Filter by historic job log id.")
  @JsonIgnore

  public String getLogId() {
        return logId.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LOG_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getLogId_JsonNullable() {
    return logId;
  }
  
  @JsonProperty(JSON_PROPERTY_LOG_ID)
  public void setLogId_JsonNullable(JsonNullable<String> logId) {
    this.logId = logId;
  }

  public void setLogId(String logId) {
    this.logId = JsonNullable.<String>of(logId);
  }


  public HistoricJobLogQueryDto jobId(String jobId) {
    this.jobId = JsonNullable.<String>of(jobId);
    
    return this;
  }

   /**
   * Filter by job id.
   * @return jobId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Filter by job id.")
  @JsonIgnore

  public String getJobId() {
        return jobId.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_JOB_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getJobId_JsonNullable() {
    return jobId;
  }
  
  @JsonProperty(JSON_PROPERTY_JOB_ID)
  public void setJobId_JsonNullable(JsonNullable<String> jobId) {
    this.jobId = jobId;
  }

  public void setJobId(String jobId) {
    this.jobId = JsonNullable.<String>of(jobId);
  }


  public HistoricJobLogQueryDto jobExceptionMessage(String jobExceptionMessage) {
    this.jobExceptionMessage = JsonNullable.<String>of(jobExceptionMessage);
    
    return this;
  }

   /**
   * Filter by job exception message.
   * @return jobExceptionMessage
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Filter by job exception message.")
  @JsonIgnore

  public String getJobExceptionMessage() {
        return jobExceptionMessage.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_JOB_EXCEPTION_MESSAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getJobExceptionMessage_JsonNullable() {
    return jobExceptionMessage;
  }
  
  @JsonProperty(JSON_PROPERTY_JOB_EXCEPTION_MESSAGE)
  public void setJobExceptionMessage_JsonNullable(JsonNullable<String> jobExceptionMessage) {
    this.jobExceptionMessage = jobExceptionMessage;
  }

  public void setJobExceptionMessage(String jobExceptionMessage) {
    this.jobExceptionMessage = JsonNullable.<String>of(jobExceptionMessage);
  }


  public HistoricJobLogQueryDto jobDefinitionId(String jobDefinitionId) {
    this.jobDefinitionId = JsonNullable.<String>of(jobDefinitionId);
    
    return this;
  }

   /**
   * Filter by job definition id.
   * @return jobDefinitionId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Filter by job definition id.")
  @JsonIgnore

  public String getJobDefinitionId() {
        return jobDefinitionId.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_JOB_DEFINITION_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getJobDefinitionId_JsonNullable() {
    return jobDefinitionId;
  }
  
  @JsonProperty(JSON_PROPERTY_JOB_DEFINITION_ID)
  public void setJobDefinitionId_JsonNullable(JsonNullable<String> jobDefinitionId) {
    this.jobDefinitionId = jobDefinitionId;
  }

  public void setJobDefinitionId(String jobDefinitionId) {
    this.jobDefinitionId = JsonNullable.<String>of(jobDefinitionId);
  }


  public HistoricJobLogQueryDto jobDefinitionType(String jobDefinitionType) {
    this.jobDefinitionType = JsonNullable.<String>of(jobDefinitionType);
    
    return this;
  }

   /**
   * Filter by job definition type. See the [User Guide](https://docs.camunda.org/manual/7.16/user-guide/process-engine/the-job-executor/#job-creation) for more information about job definition types.
   * @return jobDefinitionType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Filter by job definition type. See the [User Guide](https://docs.camunda.org/manual/7.16/user-guide/process-engine/the-job-executor/#job-creation) for more information about job definition types.")
  @JsonIgnore

  public String getJobDefinitionType() {
        return jobDefinitionType.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_JOB_DEFINITION_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getJobDefinitionType_JsonNullable() {
    return jobDefinitionType;
  }
  
  @JsonProperty(JSON_PROPERTY_JOB_DEFINITION_TYPE)
  public void setJobDefinitionType_JsonNullable(JsonNullable<String> jobDefinitionType) {
    this.jobDefinitionType = jobDefinitionType;
  }

  public void setJobDefinitionType(String jobDefinitionType) {
    this.jobDefinitionType = JsonNullable.<String>of(jobDefinitionType);
  }


  public HistoricJobLogQueryDto jobDefinitionConfiguration(String jobDefinitionConfiguration) {
    this.jobDefinitionConfiguration = JsonNullable.<String>of(jobDefinitionConfiguration);
    
    return this;
  }

   /**
   * Filter by job definition configuration.
   * @return jobDefinitionConfiguration
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Filter by job definition configuration.")
  @JsonIgnore

  public String getJobDefinitionConfiguration() {
        return jobDefinitionConfiguration.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_JOB_DEFINITION_CONFIGURATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getJobDefinitionConfiguration_JsonNullable() {
    return jobDefinitionConfiguration;
  }
  
  @JsonProperty(JSON_PROPERTY_JOB_DEFINITION_CONFIGURATION)
  public void setJobDefinitionConfiguration_JsonNullable(JsonNullable<String> jobDefinitionConfiguration) {
    this.jobDefinitionConfiguration = jobDefinitionConfiguration;
  }

  public void setJobDefinitionConfiguration(String jobDefinitionConfiguration) {
    this.jobDefinitionConfiguration = JsonNullable.<String>of(jobDefinitionConfiguration);
  }


  public HistoricJobLogQueryDto activityIdIn(List<String> activityIdIn) {
    this.activityIdIn = JsonNullable.<List<String>>of(activityIdIn);
    
    return this;
  }

  public HistoricJobLogQueryDto addActivityIdInItem(String activityIdInItem) {
    if (this.activityIdIn == null || !this.activityIdIn.isPresent()) {
      this.activityIdIn = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.activityIdIn.get().add(activityIdInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Only include historic job logs which belong to one of the passed activity ids.
   * @return activityIdIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Only include historic job logs which belong to one of the passed activity ids.")
  @JsonIgnore

  public List<String> getActivityIdIn() {
        return activityIdIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ACTIVITY_ID_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getActivityIdIn_JsonNullable() {
    return activityIdIn;
  }
  
  @JsonProperty(JSON_PROPERTY_ACTIVITY_ID_IN)
  public void setActivityIdIn_JsonNullable(JsonNullable<List<String>> activityIdIn) {
    this.activityIdIn = activityIdIn;
  }

  public void setActivityIdIn(List<String> activityIdIn) {
    this.activityIdIn = JsonNullable.<List<String>>of(activityIdIn);
  }


  public HistoricJobLogQueryDto failedActivityIdIn(List<String> failedActivityIdIn) {
    this.failedActivityIdIn = JsonNullable.<List<String>>of(failedActivityIdIn);
    
    return this;
  }

  public HistoricJobLogQueryDto addFailedActivityIdInItem(String failedActivityIdInItem) {
    if (this.failedActivityIdIn == null || !this.failedActivityIdIn.isPresent()) {
      this.failedActivityIdIn = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.failedActivityIdIn.get().add(failedActivityIdInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Only include historic job logs which belong to failures of one of the passed activity ids.
   * @return failedActivityIdIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Only include historic job logs which belong to failures of one of the passed activity ids.")
  @JsonIgnore

  public List<String> getFailedActivityIdIn() {
        return failedActivityIdIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_FAILED_ACTIVITY_ID_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getFailedActivityIdIn_JsonNullable() {
    return failedActivityIdIn;
  }
  
  @JsonProperty(JSON_PROPERTY_FAILED_ACTIVITY_ID_IN)
  public void setFailedActivityIdIn_JsonNullable(JsonNullable<List<String>> failedActivityIdIn) {
    this.failedActivityIdIn = failedActivityIdIn;
  }

  public void setFailedActivityIdIn(List<String> failedActivityIdIn) {
    this.failedActivityIdIn = JsonNullable.<List<String>>of(failedActivityIdIn);
  }


  public HistoricJobLogQueryDto executionIdIn(List<String> executionIdIn) {
    this.executionIdIn = JsonNullable.<List<String>>of(executionIdIn);
    
    return this;
  }

  public HistoricJobLogQueryDto addExecutionIdInItem(String executionIdInItem) {
    if (this.executionIdIn == null || !this.executionIdIn.isPresent()) {
      this.executionIdIn = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.executionIdIn.get().add(executionIdInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Only include historic job logs which belong to one of the passed execution ids.
   * @return executionIdIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Only include historic job logs which belong to one of the passed execution ids.")
  @JsonIgnore

  public List<String> getExecutionIdIn() {
        return executionIdIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_EXECUTION_ID_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getExecutionIdIn_JsonNullable() {
    return executionIdIn;
  }
  
  @JsonProperty(JSON_PROPERTY_EXECUTION_ID_IN)
  public void setExecutionIdIn_JsonNullable(JsonNullable<List<String>> executionIdIn) {
    this.executionIdIn = executionIdIn;
  }

  public void setExecutionIdIn(List<String> executionIdIn) {
    this.executionIdIn = JsonNullable.<List<String>>of(executionIdIn);
  }


  public HistoricJobLogQueryDto processInstanceId(String processInstanceId) {
    this.processInstanceId = JsonNullable.<String>of(processInstanceId);
    
    return this;
  }

   /**
   * Filter by process instance id.
   * @return processInstanceId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Filter by process instance id.")
  @JsonIgnore

  public String getProcessInstanceId() {
        return processInstanceId.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PROCESS_INSTANCE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getProcessInstanceId_JsonNullable() {
    return processInstanceId;
  }
  
  @JsonProperty(JSON_PROPERTY_PROCESS_INSTANCE_ID)
  public void setProcessInstanceId_JsonNullable(JsonNullable<String> processInstanceId) {
    this.processInstanceId = processInstanceId;
  }

  public void setProcessInstanceId(String processInstanceId) {
    this.processInstanceId = JsonNullable.<String>of(processInstanceId);
  }


  public HistoricJobLogQueryDto processDefinitionId(String processDefinitionId) {
    this.processDefinitionId = JsonNullable.<String>of(processDefinitionId);
    
    return this;
  }

   /**
   * Filter by process definition id.
   * @return processDefinitionId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Filter by process definition id.")
  @JsonIgnore

  public String getProcessDefinitionId() {
        return processDefinitionId.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PROCESS_DEFINITION_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getProcessDefinitionId_JsonNullable() {
    return processDefinitionId;
  }
  
  @JsonProperty(JSON_PROPERTY_PROCESS_DEFINITION_ID)
  public void setProcessDefinitionId_JsonNullable(JsonNullable<String> processDefinitionId) {
    this.processDefinitionId = processDefinitionId;
  }

  public void setProcessDefinitionId(String processDefinitionId) {
    this.processDefinitionId = JsonNullable.<String>of(processDefinitionId);
  }


  public HistoricJobLogQueryDto processDefinitionKey(String processDefinitionKey) {
    this.processDefinitionKey = JsonNullable.<String>of(processDefinitionKey);
    
    return this;
  }

   /**
   * Filter by process definition key.
   * @return processDefinitionKey
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Filter by process definition key.")
  @JsonIgnore

  public String getProcessDefinitionKey() {
        return processDefinitionKey.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PROCESS_DEFINITION_KEY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getProcessDefinitionKey_JsonNullable() {
    return processDefinitionKey;
  }
  
  @JsonProperty(JSON_PROPERTY_PROCESS_DEFINITION_KEY)
  public void setProcessDefinitionKey_JsonNullable(JsonNullable<String> processDefinitionKey) {
    this.processDefinitionKey = processDefinitionKey;
  }

  public void setProcessDefinitionKey(String processDefinitionKey) {
    this.processDefinitionKey = JsonNullable.<String>of(processDefinitionKey);
  }


  public HistoricJobLogQueryDto deploymentId(String deploymentId) {
    this.deploymentId = JsonNullable.<String>of(deploymentId);
    
    return this;
  }

   /**
   * Filter by deployment id.
   * @return deploymentId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Filter by deployment id.")
  @JsonIgnore

  public String getDeploymentId() {
        return deploymentId.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_DEPLOYMENT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getDeploymentId_JsonNullable() {
    return deploymentId;
  }
  
  @JsonProperty(JSON_PROPERTY_DEPLOYMENT_ID)
  public void setDeploymentId_JsonNullable(JsonNullable<String> deploymentId) {
    this.deploymentId = deploymentId;
  }

  public void setDeploymentId(String deploymentId) {
    this.deploymentId = JsonNullable.<String>of(deploymentId);
  }


  public HistoricJobLogQueryDto tenantIdIn(List<String> tenantIdIn) {
    this.tenantIdIn = JsonNullable.<List<String>>of(tenantIdIn);
    
    return this;
  }

  public HistoricJobLogQueryDto addTenantIdInItem(String tenantIdInItem) {
    if (this.tenantIdIn == null || !this.tenantIdIn.isPresent()) {
      this.tenantIdIn = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.tenantIdIn.get().add(tenantIdInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Only include historic job log entries which belong to one of the passed and comma- separated tenant ids.
   * @return tenantIdIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Only include historic job log entries which belong to one of the passed and comma- separated tenant ids.")
  @JsonIgnore

  public List<String> getTenantIdIn() {
        return tenantIdIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_TENANT_ID_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getTenantIdIn_JsonNullable() {
    return tenantIdIn;
  }
  
  @JsonProperty(JSON_PROPERTY_TENANT_ID_IN)
  public void setTenantIdIn_JsonNullable(JsonNullable<List<String>> tenantIdIn) {
    this.tenantIdIn = tenantIdIn;
  }

  public void setTenantIdIn(List<String> tenantIdIn) {
    this.tenantIdIn = JsonNullable.<List<String>>of(tenantIdIn);
  }


  public HistoricJobLogQueryDto withoutTenantId(Boolean withoutTenantId) {
    this.withoutTenantId = JsonNullable.<Boolean>of(withoutTenantId);
    
    return this;
  }

   /**
   * Only include historic job log entries that belong to no tenant. Value may only be &#x60;true&#x60;, as &#x60;false&#x60; is the default behavior.
   * @return withoutTenantId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Only include historic job log entries that belong to no tenant. Value may only be `true`, as `false` is the default behavior.")
  @JsonIgnore

  public Boolean getWithoutTenantId() {
        return withoutTenantId.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_WITHOUT_TENANT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Boolean> getWithoutTenantId_JsonNullable() {
    return withoutTenantId;
  }
  
  @JsonProperty(JSON_PROPERTY_WITHOUT_TENANT_ID)
  public void setWithoutTenantId_JsonNullable(JsonNullable<Boolean> withoutTenantId) {
    this.withoutTenantId = withoutTenantId;
  }

  public void setWithoutTenantId(Boolean withoutTenantId) {
    this.withoutTenantId = JsonNullable.<Boolean>of(withoutTenantId);
  }


  public HistoricJobLogQueryDto hostname(String hostname) {
    this.hostname = JsonNullable.<String>of(hostname);
    
    return this;
  }

   /**
   * Filter by hostname.
   * @return hostname
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Filter by hostname.")
  @JsonIgnore

  public String getHostname() {
        return hostname.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_HOSTNAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getHostname_JsonNullable() {
    return hostname;
  }
  
  @JsonProperty(JSON_PROPERTY_HOSTNAME)
  public void setHostname_JsonNullable(JsonNullable<String> hostname) {
    this.hostname = hostname;
  }

  public void setHostname(String hostname) {
    this.hostname = JsonNullable.<String>of(hostname);
  }


  public HistoricJobLogQueryDto jobPriorityLowerThanOrEquals(Long jobPriorityLowerThanOrEquals) {
    this.jobPriorityLowerThanOrEquals = JsonNullable.<Long>of(jobPriorityLowerThanOrEquals);
    
    return this;
  }

   /**
   * Only include logs for which the associated job had a priority lower than or equal to the given value. Value must be a valid &#x60;long&#x60; value.
   * @return jobPriorityLowerThanOrEquals
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Only include logs for which the associated job had a priority lower than or equal to the given value. Value must be a valid `long` value.")
  @JsonIgnore

  public Long getJobPriorityLowerThanOrEquals() {
        return jobPriorityLowerThanOrEquals.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_JOB_PRIORITY_LOWER_THAN_OR_EQUALS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Long> getJobPriorityLowerThanOrEquals_JsonNullable() {
    return jobPriorityLowerThanOrEquals;
  }
  
  @JsonProperty(JSON_PROPERTY_JOB_PRIORITY_LOWER_THAN_OR_EQUALS)
  public void setJobPriorityLowerThanOrEquals_JsonNullable(JsonNullable<Long> jobPriorityLowerThanOrEquals) {
    this.jobPriorityLowerThanOrEquals = jobPriorityLowerThanOrEquals;
  }

  public void setJobPriorityLowerThanOrEquals(Long jobPriorityLowerThanOrEquals) {
    this.jobPriorityLowerThanOrEquals = JsonNullable.<Long>of(jobPriorityLowerThanOrEquals);
  }


  public HistoricJobLogQueryDto jobPriorityHigherThanOrEquals(Long jobPriorityHigherThanOrEquals) {
    this.jobPriorityHigherThanOrEquals = JsonNullable.<Long>of(jobPriorityHigherThanOrEquals);
    
    return this;
  }

   /**
   * Only include logs for which the associated job had a priority higher than or equal to the given value. Value must be a valid &#x60;long&#x60; value.
   * @return jobPriorityHigherThanOrEquals
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Only include logs for which the associated job had a priority higher than or equal to the given value. Value must be a valid `long` value.")
  @JsonIgnore

  public Long getJobPriorityHigherThanOrEquals() {
        return jobPriorityHigherThanOrEquals.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_JOB_PRIORITY_HIGHER_THAN_OR_EQUALS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Long> getJobPriorityHigherThanOrEquals_JsonNullable() {
    return jobPriorityHigherThanOrEquals;
  }
  
  @JsonProperty(JSON_PROPERTY_JOB_PRIORITY_HIGHER_THAN_OR_EQUALS)
  public void setJobPriorityHigherThanOrEquals_JsonNullable(JsonNullable<Long> jobPriorityHigherThanOrEquals) {
    this.jobPriorityHigherThanOrEquals = jobPriorityHigherThanOrEquals;
  }

  public void setJobPriorityHigherThanOrEquals(Long jobPriorityHigherThanOrEquals) {
    this.jobPriorityHigherThanOrEquals = JsonNullable.<Long>of(jobPriorityHigherThanOrEquals);
  }


  public HistoricJobLogQueryDto creationLog(Boolean creationLog) {
    this.creationLog = JsonNullable.<Boolean>of(creationLog);
    
    return this;
  }

   /**
   * Only include creation logs. Value may only be &#x60;true&#x60;, as &#x60;false&#x60; is the default behavior.
   * @return creationLog
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Only include creation logs. Value may only be `true`, as `false` is the default behavior.")
  @JsonIgnore

  public Boolean getCreationLog() {
        return creationLog.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_CREATION_LOG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Boolean> getCreationLog_JsonNullable() {
    return creationLog;
  }
  
  @JsonProperty(JSON_PROPERTY_CREATION_LOG)
  public void setCreationLog_JsonNullable(JsonNullable<Boolean> creationLog) {
    this.creationLog = creationLog;
  }

  public void setCreationLog(Boolean creationLog) {
    this.creationLog = JsonNullable.<Boolean>of(creationLog);
  }


  public HistoricJobLogQueryDto failureLog(Boolean failureLog) {
    this.failureLog = JsonNullable.<Boolean>of(failureLog);
    
    return this;
  }

   /**
   * Only include failure logs. Value may only be &#x60;true&#x60;, as &#x60;false&#x60; is the default behavior.
   * @return failureLog
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Only include failure logs. Value may only be `true`, as `false` is the default behavior.")
  @JsonIgnore

  public Boolean getFailureLog() {
        return failureLog.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_FAILURE_LOG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Boolean> getFailureLog_JsonNullable() {
    return failureLog;
  }
  
  @JsonProperty(JSON_PROPERTY_FAILURE_LOG)
  public void setFailureLog_JsonNullable(JsonNullable<Boolean> failureLog) {
    this.failureLog = failureLog;
  }

  public void setFailureLog(Boolean failureLog) {
    this.failureLog = JsonNullable.<Boolean>of(failureLog);
  }


  public HistoricJobLogQueryDto successLog(Boolean successLog) {
    this.successLog = JsonNullable.<Boolean>of(successLog);
    
    return this;
  }

   /**
   * Only include success logs. Value may only be &#x60;true&#x60;, as &#x60;false&#x60; is the default behavior.
   * @return successLog
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Only include success logs. Value may only be `true`, as `false` is the default behavior.")
  @JsonIgnore

  public Boolean getSuccessLog() {
        return successLog.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SUCCESS_LOG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Boolean> getSuccessLog_JsonNullable() {
    return successLog;
  }
  
  @JsonProperty(JSON_PROPERTY_SUCCESS_LOG)
  public void setSuccessLog_JsonNullable(JsonNullable<Boolean> successLog) {
    this.successLog = successLog;
  }

  public void setSuccessLog(Boolean successLog) {
    this.successLog = JsonNullable.<Boolean>of(successLog);
  }


  public HistoricJobLogQueryDto deletionLog(Boolean deletionLog) {
    this.deletionLog = JsonNullable.<Boolean>of(deletionLog);
    
    return this;
  }

   /**
   * Only include deletion logs. Value may only be &#x60;true&#x60;, as &#x60;false&#x60; is the default behavior.
   * @return deletionLog
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Only include deletion logs. Value may only be `true`, as `false` is the default behavior.")
  @JsonIgnore

  public Boolean getDeletionLog() {
        return deletionLog.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_DELETION_LOG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Boolean> getDeletionLog_JsonNullable() {
    return deletionLog;
  }
  
  @JsonProperty(JSON_PROPERTY_DELETION_LOG)
  public void setDeletionLog_JsonNullable(JsonNullable<Boolean> deletionLog) {
    this.deletionLog = deletionLog;
  }

  public void setDeletionLog(Boolean deletionLog) {
    this.deletionLog = JsonNullable.<Boolean>of(deletionLog);
  }


  public HistoricJobLogQueryDto sorting(List<HistoricJobLogQueryDtoSorting> sorting) {
    this.sorting = JsonNullable.<List<HistoricJobLogQueryDtoSorting>>of(sorting);
    
    return this;
  }

  public HistoricJobLogQueryDto addSortingItem(HistoricJobLogQueryDtoSorting sortingItem) {
    if (this.sorting == null || !this.sorting.isPresent()) {
      this.sorting = JsonNullable.<List<HistoricJobLogQueryDtoSorting>>of(new ArrayList<>());
    }
    try {
      this.sorting.get().add(sortingItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * An array of criteria to sort the result by. Each element of the array is                        an object that specifies one ordering. The position in the array                        identifies the rank of an ordering, i.e., whether it is primary, secondary,                        etc. Sorting has no effect for &#x60;count&#x60; endpoints
   * @return sorting
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "An array of criteria to sort the result by. Each element of the array is                        an object that specifies one ordering. The position in the array                        identifies the rank of an ordering, i.e., whether it is primary, secondary,                        etc. Sorting has no effect for `count` endpoints")
  @JsonIgnore

  public List<HistoricJobLogQueryDtoSorting> getSorting() {
        return sorting.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SORTING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<HistoricJobLogQueryDtoSorting>> getSorting_JsonNullable() {
    return sorting;
  }
  
  @JsonProperty(JSON_PROPERTY_SORTING)
  public void setSorting_JsonNullable(JsonNullable<List<HistoricJobLogQueryDtoSorting>> sorting) {
    this.sorting = sorting;
  }

  public void setSorting(List<HistoricJobLogQueryDtoSorting> sorting) {
    this.sorting = JsonNullable.<List<HistoricJobLogQueryDtoSorting>>of(sorting);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    HistoricJobLogQueryDto historicJobLogQueryDto = (HistoricJobLogQueryDto) o;
    return Objects.equals(this.logId, historicJobLogQueryDto.logId) &&
        Objects.equals(this.jobId, historicJobLogQueryDto.jobId) &&
        Objects.equals(this.jobExceptionMessage, historicJobLogQueryDto.jobExceptionMessage) &&
        Objects.equals(this.jobDefinitionId, historicJobLogQueryDto.jobDefinitionId) &&
        Objects.equals(this.jobDefinitionType, historicJobLogQueryDto.jobDefinitionType) &&
        Objects.equals(this.jobDefinitionConfiguration, historicJobLogQueryDto.jobDefinitionConfiguration) &&
        Objects.equals(this.activityIdIn, historicJobLogQueryDto.activityIdIn) &&
        Objects.equals(this.failedActivityIdIn, historicJobLogQueryDto.failedActivityIdIn) &&
        Objects.equals(this.executionIdIn, historicJobLogQueryDto.executionIdIn) &&
        Objects.equals(this.processInstanceId, historicJobLogQueryDto.processInstanceId) &&
        Objects.equals(this.processDefinitionId, historicJobLogQueryDto.processDefinitionId) &&
        Objects.equals(this.processDefinitionKey, historicJobLogQueryDto.processDefinitionKey) &&
        Objects.equals(this.deploymentId, historicJobLogQueryDto.deploymentId) &&
        Objects.equals(this.tenantIdIn, historicJobLogQueryDto.tenantIdIn) &&
        Objects.equals(this.withoutTenantId, historicJobLogQueryDto.withoutTenantId) &&
        Objects.equals(this.hostname, historicJobLogQueryDto.hostname) &&
        Objects.equals(this.jobPriorityLowerThanOrEquals, historicJobLogQueryDto.jobPriorityLowerThanOrEquals) &&
        Objects.equals(this.jobPriorityHigherThanOrEquals, historicJobLogQueryDto.jobPriorityHigherThanOrEquals) &&
        Objects.equals(this.creationLog, historicJobLogQueryDto.creationLog) &&
        Objects.equals(this.failureLog, historicJobLogQueryDto.failureLog) &&
        Objects.equals(this.successLog, historicJobLogQueryDto.successLog) &&
        Objects.equals(this.deletionLog, historicJobLogQueryDto.deletionLog) &&
        Objects.equals(this.sorting, historicJobLogQueryDto.sorting);
  }

  @Override
  public int hashCode() {
    return Objects.hash(logId, jobId, jobExceptionMessage, jobDefinitionId, jobDefinitionType, jobDefinitionConfiguration, activityIdIn, failedActivityIdIn, executionIdIn, processInstanceId, processDefinitionId, processDefinitionKey, deploymentId, tenantIdIn, withoutTenantId, hostname, jobPriorityLowerThanOrEquals, jobPriorityHigherThanOrEquals, creationLog, failureLog, successLog, deletionLog, sorting);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class HistoricJobLogQueryDto {\n");
    sb.append("    logId: ").append(toIndentedString(logId)).append("\n");
    sb.append("    jobId: ").append(toIndentedString(jobId)).append("\n");
    sb.append("    jobExceptionMessage: ").append(toIndentedString(jobExceptionMessage)).append("\n");
    sb.append("    jobDefinitionId: ").append(toIndentedString(jobDefinitionId)).append("\n");
    sb.append("    jobDefinitionType: ").append(toIndentedString(jobDefinitionType)).append("\n");
    sb.append("    jobDefinitionConfiguration: ").append(toIndentedString(jobDefinitionConfiguration)).append("\n");
    sb.append("    activityIdIn: ").append(toIndentedString(activityIdIn)).append("\n");
    sb.append("    failedActivityIdIn: ").append(toIndentedString(failedActivityIdIn)).append("\n");
    sb.append("    executionIdIn: ").append(toIndentedString(executionIdIn)).append("\n");
    sb.append("    processInstanceId: ").append(toIndentedString(processInstanceId)).append("\n");
    sb.append("    processDefinitionId: ").append(toIndentedString(processDefinitionId)).append("\n");
    sb.append("    processDefinitionKey: ").append(toIndentedString(processDefinitionKey)).append("\n");
    sb.append("    deploymentId: ").append(toIndentedString(deploymentId)).append("\n");
    sb.append("    tenantIdIn: ").append(toIndentedString(tenantIdIn)).append("\n");
    sb.append("    withoutTenantId: ").append(toIndentedString(withoutTenantId)).append("\n");
    sb.append("    hostname: ").append(toIndentedString(hostname)).append("\n");
    sb.append("    jobPriorityLowerThanOrEquals: ").append(toIndentedString(jobPriorityLowerThanOrEquals)).append("\n");
    sb.append("    jobPriorityHigherThanOrEquals: ").append(toIndentedString(jobPriorityHigherThanOrEquals)).append("\n");
    sb.append("    creationLog: ").append(toIndentedString(creationLog)).append("\n");
    sb.append("    failureLog: ").append(toIndentedString(failureLog)).append("\n");
    sb.append("    successLog: ").append(toIndentedString(successLog)).append("\n");
    sb.append("    deletionLog: ").append(toIndentedString(deletionLog)).append("\n");
    sb.append("    sorting: ").append(toIndentedString(sorting)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

