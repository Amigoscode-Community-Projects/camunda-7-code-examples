/*
 * Camunda Platform REST API
 * OpenApi Spec for Camunda Platform REST API.
 *
 * The version of the OpenAPI document: 7.16.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.camunda.consulting.openapi.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;

/**
 * AuthenticationResult
 */
@JsonPropertyOrder({
  AuthenticationResult.JSON_PROPERTY_AUTHENTICATED_USER,
  AuthenticationResult.JSON_PROPERTY_IS_AUTHENTICATED,
  AuthenticationResult.JSON_PROPERTY_TENANTS,
  AuthenticationResult.JSON_PROPERTY_GROUPS
})
@JsonTypeName("AuthenticationResult")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-10-13T16:56:52.297572+02:00[Europe/Berlin]")
public class AuthenticationResult {
  public static final String JSON_PROPERTY_AUTHENTICATED_USER = "authenticatedUser";
  private JsonNullable<String> authenticatedUser = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_IS_AUTHENTICATED = "isAuthenticated";
  private JsonNullable<Boolean> isAuthenticated = JsonNullable.<Boolean>undefined();

  public static final String JSON_PROPERTY_TENANTS = "tenants";
  private JsonNullable<List<String>> tenants = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_GROUPS = "groups";
  private JsonNullable<List<String>> groups = JsonNullable.<List<String>>undefined();


  public AuthenticationResult authenticatedUser(String authenticatedUser) {
    this.authenticatedUser = JsonNullable.<String>of(authenticatedUser);
    
    return this;
  }

   /**
   * An id of authenticated user.
   * @return authenticatedUser
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "An id of authenticated user.")
  @JsonIgnore

  public String getAuthenticatedUser() {
        return authenticatedUser.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_AUTHENTICATED_USER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getAuthenticatedUser_JsonNullable() {
    return authenticatedUser;
  }
  
  @JsonProperty(JSON_PROPERTY_AUTHENTICATED_USER)
  public void setAuthenticatedUser_JsonNullable(JsonNullable<String> authenticatedUser) {
    this.authenticatedUser = authenticatedUser;
  }

  public void setAuthenticatedUser(String authenticatedUser) {
    this.authenticatedUser = JsonNullable.<String>of(authenticatedUser);
  }


  public AuthenticationResult isAuthenticated(Boolean isAuthenticated) {
    this.isAuthenticated = JsonNullable.<Boolean>of(isAuthenticated);
    
    return this;
  }

   /**
   * A flag indicating if user is authenticated.
   * @return isAuthenticated
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A flag indicating if user is authenticated.")
  @JsonIgnore

  public Boolean getIsAuthenticated() {
        return isAuthenticated.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_IS_AUTHENTICATED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Boolean> getIsAuthenticated_JsonNullable() {
    return isAuthenticated;
  }
  
  @JsonProperty(JSON_PROPERTY_IS_AUTHENTICATED)
  public void setIsAuthenticated_JsonNullable(JsonNullable<Boolean> isAuthenticated) {
    this.isAuthenticated = isAuthenticated;
  }

  public void setIsAuthenticated(Boolean isAuthenticated) {
    this.isAuthenticated = JsonNullable.<Boolean>of(isAuthenticated);
  }


  public AuthenticationResult tenants(List<String> tenants) {
    this.tenants = JsonNullable.<List<String>>of(tenants);
    
    return this;
  }

  public AuthenticationResult addTenantsItem(String tenantsItem) {
    if (this.tenants == null || !this.tenants.isPresent()) {
      this.tenants = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.tenants.get().add(tenantsItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Will be null.
   * @return tenants
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Will be null.")
  @JsonIgnore

  public List<String> getTenants() {
        return tenants.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_TENANTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getTenants_JsonNullable() {
    return tenants;
  }
  
  @JsonProperty(JSON_PROPERTY_TENANTS)
  public void setTenants_JsonNullable(JsonNullable<List<String>> tenants) {
    this.tenants = tenants;
  }

  public void setTenants(List<String> tenants) {
    this.tenants = JsonNullable.<List<String>>of(tenants);
  }


  public AuthenticationResult groups(List<String> groups) {
    this.groups = JsonNullable.<List<String>>of(groups);
    
    return this;
  }

  public AuthenticationResult addGroupsItem(String groupsItem) {
    if (this.groups == null || !this.groups.isPresent()) {
      this.groups = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.groups.get().add(groupsItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Will be null.
   * @return groups
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Will be null.")
  @JsonIgnore

  public List<String> getGroups() {
        return groups.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_GROUPS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getGroups_JsonNullable() {
    return groups;
  }
  
  @JsonProperty(JSON_PROPERTY_GROUPS)
  public void setGroups_JsonNullable(JsonNullable<List<String>> groups) {
    this.groups = groups;
  }

  public void setGroups(List<String> groups) {
    this.groups = JsonNullable.<List<String>>of(groups);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AuthenticationResult authenticationResult = (AuthenticationResult) o;
    return Objects.equals(this.authenticatedUser, authenticationResult.authenticatedUser) &&
        Objects.equals(this.isAuthenticated, authenticationResult.isAuthenticated) &&
        Objects.equals(this.tenants, authenticationResult.tenants) &&
        Objects.equals(this.groups, authenticationResult.groups);
  }

  @Override
  public int hashCode() {
    return Objects.hash(authenticatedUser, isAuthenticated, tenants, groups);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AuthenticationResult {\n");
    sb.append("    authenticatedUser: ").append(toIndentedString(authenticatedUser)).append("\n");
    sb.append("    isAuthenticated: ").append(toIndentedString(isAuthenticated)).append("\n");
    sb.append("    tenants: ").append(toIndentedString(tenants)).append("\n");
    sb.append("    groups: ").append(toIndentedString(groups)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

