/*
 * Camunda Platform REST API
 * OpenApi Spec for Camunda Platform REST API.
 *
 * The version of the OpenAPI document: 7.16.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.camunda.consulting.openapi.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;

/**
 * AtomLink
 */
@JsonPropertyOrder({
  AtomLink.JSON_PROPERTY_REL,
  AtomLink.JSON_PROPERTY_HREF,
  AtomLink.JSON_PROPERTY_METHOD
})
@JsonTypeName("AtomLink")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-10-13T16:56:52.297572+02:00[Europe/Berlin]")
public class AtomLink {
  public static final String JSON_PROPERTY_REL = "rel";
  private JsonNullable<String> rel = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_HREF = "href";
  private JsonNullable<String> href = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_METHOD = "method";
  private JsonNullable<String> method = JsonNullable.<String>undefined();


  public AtomLink rel(String rel) {
    this.rel = JsonNullable.<String>of(rel);
    
    return this;
  }

   /**
   * The relation of the link to the object that belongs to.
   * @return rel
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The relation of the link to the object that belongs to.")
  @JsonIgnore

  public String getRel() {
        return rel.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_REL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getRel_JsonNullable() {
    return rel;
  }
  
  @JsonProperty(JSON_PROPERTY_REL)
  public void setRel_JsonNullable(JsonNullable<String> rel) {
    this.rel = rel;
  }

  public void setRel(String rel) {
    this.rel = JsonNullable.<String>of(rel);
  }


  public AtomLink href(String href) {
    this.href = JsonNullable.<String>of(href);
    
    return this;
  }

   /**
   * The url of the link.
   * @return href
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The url of the link.")
  @JsonIgnore

  public String getHref() {
        return href.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_HREF)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getHref_JsonNullable() {
    return href;
  }
  
  @JsonProperty(JSON_PROPERTY_HREF)
  public void setHref_JsonNullable(JsonNullable<String> href) {
    this.href = href;
  }

  public void setHref(String href) {
    this.href = JsonNullable.<String>of(href);
  }


  public AtomLink method(String method) {
    this.method = JsonNullable.<String>of(method);
    
    return this;
  }

   /**
   * The http method.
   * @return method
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The http method.")
  @JsonIgnore

  public String getMethod() {
        return method.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_METHOD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getMethod_JsonNullable() {
    return method;
  }
  
  @JsonProperty(JSON_PROPERTY_METHOD)
  public void setMethod_JsonNullable(JsonNullable<String> method) {
    this.method = method;
  }

  public void setMethod(String method) {
    this.method = JsonNullable.<String>of(method);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AtomLink atomLink = (AtomLink) o;
    return Objects.equals(this.rel, atomLink.rel) &&
        Objects.equals(this.href, atomLink.href) &&
        Objects.equals(this.method, atomLink.method);
  }

  @Override
  public int hashCode() {
    return Objects.hash(rel, href, method);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AtomLink {\n");
    sb.append("    rel: ").append(toIndentedString(rel)).append("\n");
    sb.append("    href: ").append(toIndentedString(href)).append("\n");
    sb.append("    method: ").append(toIndentedString(method)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

