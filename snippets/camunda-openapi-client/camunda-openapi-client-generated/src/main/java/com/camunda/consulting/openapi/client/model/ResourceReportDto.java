/*
 * Camunda Platform REST API
 * OpenApi Spec for Camunda Platform REST API.
 *
 * The version of the OpenAPI document: 7.16.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.camunda.consulting.openapi.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.camunda.consulting.openapi.client.model.ProblemDto;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;

/**
 * ResourceReportDto
 */
@JsonPropertyOrder({
  ResourceReportDto.JSON_PROPERTY_ERRORS,
  ResourceReportDto.JSON_PROPERTY_WARNINGS
})
@JsonTypeName("ResourceReportDto")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-10-13T16:56:52.297572+02:00[Europe/Berlin]")
public class ResourceReportDto {
  public static final String JSON_PROPERTY_ERRORS = "errors";
  private JsonNullable<List<ProblemDto>> errors = JsonNullable.<List<ProblemDto>>undefined();

  public static final String JSON_PROPERTY_WARNINGS = "warnings";
  private JsonNullable<List<ProblemDto>> warnings = JsonNullable.<List<ProblemDto>>undefined();


  public ResourceReportDto errors(List<ProblemDto> errors) {
    this.errors = JsonNullable.<List<ProblemDto>>of(errors);
    
    return this;
  }

  public ResourceReportDto addErrorsItem(ProblemDto errorsItem) {
    if (this.errors == null || !this.errors.isPresent()) {
      this.errors = JsonNullable.<List<ProblemDto>>of(new ArrayList<>());
    }
    try {
      this.errors.get().add(errorsItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * A list of errors occurred during parsing.
   * @return errors
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A list of errors occurred during parsing.")
  @JsonIgnore

  public List<ProblemDto> getErrors() {
        return errors.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ERRORS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<ProblemDto>> getErrors_JsonNullable() {
    return errors;
  }
  
  @JsonProperty(JSON_PROPERTY_ERRORS)
  public void setErrors_JsonNullable(JsonNullable<List<ProblemDto>> errors) {
    this.errors = errors;
  }

  public void setErrors(List<ProblemDto> errors) {
    this.errors = JsonNullable.<List<ProblemDto>>of(errors);
  }


  public ResourceReportDto warnings(List<ProblemDto> warnings) {
    this.warnings = JsonNullable.<List<ProblemDto>>of(warnings);
    
    return this;
  }

  public ResourceReportDto addWarningsItem(ProblemDto warningsItem) {
    if (this.warnings == null || !this.warnings.isPresent()) {
      this.warnings = JsonNullable.<List<ProblemDto>>of(new ArrayList<>());
    }
    try {
      this.warnings.get().add(warningsItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * A list of warnings occurred during parsing.
   * @return warnings
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A list of warnings occurred during parsing.")
  @JsonIgnore

  public List<ProblemDto> getWarnings() {
        return warnings.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_WARNINGS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<ProblemDto>> getWarnings_JsonNullable() {
    return warnings;
  }
  
  @JsonProperty(JSON_PROPERTY_WARNINGS)
  public void setWarnings_JsonNullable(JsonNullable<List<ProblemDto>> warnings) {
    this.warnings = warnings;
  }

  public void setWarnings(List<ProblemDto> warnings) {
    this.warnings = JsonNullable.<List<ProblemDto>>of(warnings);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ResourceReportDto resourceReportDto = (ResourceReportDto) o;
    return Objects.equals(this.errors, resourceReportDto.errors) &&
        Objects.equals(this.warnings, resourceReportDto.warnings);
  }

  @Override
  public int hashCode() {
    return Objects.hash(errors, warnings);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ResourceReportDto {\n");
    sb.append("    errors: ").append(toIndentedString(errors)).append("\n");
    sb.append("    warnings: ").append(toIndentedString(warnings)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

