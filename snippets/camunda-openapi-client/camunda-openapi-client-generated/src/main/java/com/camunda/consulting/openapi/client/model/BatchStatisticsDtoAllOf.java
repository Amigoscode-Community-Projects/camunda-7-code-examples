/*
 * Camunda Platform REST API
 * OpenApi Spec for Camunda Platform REST API.
 *
 * The version of the OpenAPI document: 7.16.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.camunda.consulting.openapi.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;

/**
 * BatchStatisticsDtoAllOf
 */
@JsonPropertyOrder({
  BatchStatisticsDtoAllOf.JSON_PROPERTY_REMAINING_JOBS,
  BatchStatisticsDtoAllOf.JSON_PROPERTY_COMPLETED_JOBS,
  BatchStatisticsDtoAllOf.JSON_PROPERTY_FAILED_JOBS
})
@JsonTypeName("BatchStatisticsDto_allOf")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-10-13T16:56:52.297572+02:00[Europe/Berlin]")
public class BatchStatisticsDtoAllOf {
  public static final String JSON_PROPERTY_REMAINING_JOBS = "remainingJobs";
  private JsonNullable<Integer> remainingJobs = JsonNullable.<Integer>undefined();

  public static final String JSON_PROPERTY_COMPLETED_JOBS = "completedJobs";
  private JsonNullable<Integer> completedJobs = JsonNullable.<Integer>undefined();

  public static final String JSON_PROPERTY_FAILED_JOBS = "failedJobs";
  private JsonNullable<Integer> failedJobs = JsonNullable.<Integer>undefined();


  public BatchStatisticsDtoAllOf remainingJobs(Integer remainingJobs) {
    this.remainingJobs = JsonNullable.<Integer>of(remainingJobs);
    
    return this;
  }

   /**
   * The number of remaining batch execution jobs. This does include failed batch execution jobs and batch execution jobs which still have to be created by the seed job.
   * @return remainingJobs
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The number of remaining batch execution jobs. This does include failed batch execution jobs and batch execution jobs which still have to be created by the seed job.")
  @JsonIgnore

  public Integer getRemainingJobs() {
        return remainingJobs.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_REMAINING_JOBS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Integer> getRemainingJobs_JsonNullable() {
    return remainingJobs;
  }
  
  @JsonProperty(JSON_PROPERTY_REMAINING_JOBS)
  public void setRemainingJobs_JsonNullable(JsonNullable<Integer> remainingJobs) {
    this.remainingJobs = remainingJobs;
  }

  public void setRemainingJobs(Integer remainingJobs) {
    this.remainingJobs = JsonNullable.<Integer>of(remainingJobs);
  }


  public BatchStatisticsDtoAllOf completedJobs(Integer completedJobs) {
    this.completedJobs = JsonNullable.<Integer>of(completedJobs);
    
    return this;
  }

   /**
   * The number of completed batch execution jobs. This does include aborted/deleted batch execution jobs.
   * @return completedJobs
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The number of completed batch execution jobs. This does include aborted/deleted batch execution jobs.")
  @JsonIgnore

  public Integer getCompletedJobs() {
        return completedJobs.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_COMPLETED_JOBS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Integer> getCompletedJobs_JsonNullable() {
    return completedJobs;
  }
  
  @JsonProperty(JSON_PROPERTY_COMPLETED_JOBS)
  public void setCompletedJobs_JsonNullable(JsonNullable<Integer> completedJobs) {
    this.completedJobs = completedJobs;
  }

  public void setCompletedJobs(Integer completedJobs) {
    this.completedJobs = JsonNullable.<Integer>of(completedJobs);
  }


  public BatchStatisticsDtoAllOf failedJobs(Integer failedJobs) {
    this.failedJobs = JsonNullable.<Integer>of(failedJobs);
    
    return this;
  }

   /**
   * The number of failed batch execution jobs. This does not include aborted or deleted batch execution jobs.
   * @return failedJobs
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The number of failed batch execution jobs. This does not include aborted or deleted batch execution jobs.")
  @JsonIgnore

  public Integer getFailedJobs() {
        return failedJobs.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_FAILED_JOBS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Integer> getFailedJobs_JsonNullable() {
    return failedJobs;
  }
  
  @JsonProperty(JSON_PROPERTY_FAILED_JOBS)
  public void setFailedJobs_JsonNullable(JsonNullable<Integer> failedJobs) {
    this.failedJobs = failedJobs;
  }

  public void setFailedJobs(Integer failedJobs) {
    this.failedJobs = JsonNullable.<Integer>of(failedJobs);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BatchStatisticsDtoAllOf batchStatisticsDtoAllOf = (BatchStatisticsDtoAllOf) o;
    return Objects.equals(this.remainingJobs, batchStatisticsDtoAllOf.remainingJobs) &&
        Objects.equals(this.completedJobs, batchStatisticsDtoAllOf.completedJobs) &&
        Objects.equals(this.failedJobs, batchStatisticsDtoAllOf.failedJobs);
  }

  @Override
  public int hashCode() {
    return Objects.hash(remainingJobs, completedJobs, failedJobs);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BatchStatisticsDtoAllOf {\n");
    sb.append("    remainingJobs: ").append(toIndentedString(remainingJobs)).append("\n");
    sb.append("    completedJobs: ").append(toIndentedString(completedJobs)).append("\n");
    sb.append("    failedJobs: ").append(toIndentedString(failedJobs)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

