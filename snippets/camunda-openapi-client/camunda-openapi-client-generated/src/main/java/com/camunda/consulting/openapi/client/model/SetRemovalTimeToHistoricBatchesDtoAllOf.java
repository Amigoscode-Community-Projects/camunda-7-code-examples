/*
 * Camunda Platform REST API
 * OpenApi Spec for Camunda Platform REST API.
 *
 * The version of the OpenAPI document: 7.16.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.camunda.consulting.openapi.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;

/**
 * SetRemovalTimeToHistoricBatchesDtoAllOf
 */
@JsonPropertyOrder({
  SetRemovalTimeToHistoricBatchesDtoAllOf.JSON_PROPERTY_HISTORIC_BATCH_QUERY,
  SetRemovalTimeToHistoricBatchesDtoAllOf.JSON_PROPERTY_HISTORIC_BATCH_IDS
})
@JsonTypeName("SetRemovalTimeToHistoricBatchesDto_allOf")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-10-13T17:49:51.183809+02:00[Europe/Berlin]")
public class SetRemovalTimeToHistoricBatchesDtoAllOf {
  public static final String JSON_PROPERTY_HISTORIC_BATCH_QUERY = "historicBatchQuery";
  private Object historicBatchQuery;

  public static final String JSON_PROPERTY_HISTORIC_BATCH_IDS = "historicBatchIds";
  private List<String> historicBatchIds = null;


  public SetRemovalTimeToHistoricBatchesDtoAllOf historicBatchQuery(Object historicBatchQuery) {
    
    this.historicBatchQuery = historicBatchQuery;
    return this;
  }

   /**
   * Query for the historic batches to set the removal time for.
   * @return historicBatchQuery
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Query for the historic batches to set the removal time for.")
  @JsonProperty(JSON_PROPERTY_HISTORIC_BATCH_QUERY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Object getHistoricBatchQuery() {
    return historicBatchQuery;
  }


  public void setHistoricBatchQuery(Object historicBatchQuery) {
    this.historicBatchQuery = historicBatchQuery;
  }


  public SetRemovalTimeToHistoricBatchesDtoAllOf historicBatchIds(List<String> historicBatchIds) {
    
    this.historicBatchIds = historicBatchIds;
    return this;
  }

  public SetRemovalTimeToHistoricBatchesDtoAllOf addHistoricBatchIdsItem(String historicBatchIdsItem) {
    if (this.historicBatchIds == null) {
      this.historicBatchIds = new ArrayList<>();
    }
    this.historicBatchIds.add(historicBatchIdsItem);
    return this;
  }

   /**
   * The ids of the historic batches to set the removal time for.
   * @return historicBatchIds
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The ids of the historic batches to set the removal time for.")
  @JsonProperty(JSON_PROPERTY_HISTORIC_BATCH_IDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<String> getHistoricBatchIds() {
    return historicBatchIds;
  }


  public void setHistoricBatchIds(List<String> historicBatchIds) {
    this.historicBatchIds = historicBatchIds;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SetRemovalTimeToHistoricBatchesDtoAllOf setRemovalTimeToHistoricBatchesDtoAllOf = (SetRemovalTimeToHistoricBatchesDtoAllOf) o;
    return Objects.equals(this.historicBatchQuery, setRemovalTimeToHistoricBatchesDtoAllOf.historicBatchQuery) &&
        Objects.equals(this.historicBatchIds, setRemovalTimeToHistoricBatchesDtoAllOf.historicBatchIds);
  }

  @Override
  public int hashCode() {
    return Objects.hash(historicBatchQuery, historicBatchIds);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SetRemovalTimeToHistoricBatchesDtoAllOf {\n");
    sb.append("    historicBatchQuery: ").append(toIndentedString(historicBatchQuery)).append("\n");
    sb.append("    historicBatchIds: ").append(toIndentedString(historicBatchIds)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

