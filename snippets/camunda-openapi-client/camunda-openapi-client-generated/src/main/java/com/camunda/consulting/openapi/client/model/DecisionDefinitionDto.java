/*
 * Camunda Platform REST API
 * OpenApi Spec for Camunda Platform REST API.
 *
 * The version of the OpenAPI document: 7.16.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.camunda.consulting.openapi.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;

/**
 * DecisionDefinitionDto
 */
@JsonPropertyOrder({
  DecisionDefinitionDto.JSON_PROPERTY_ID,
  DecisionDefinitionDto.JSON_PROPERTY_KEY,
  DecisionDefinitionDto.JSON_PROPERTY_CATEGORY,
  DecisionDefinitionDto.JSON_PROPERTY_NAME,
  DecisionDefinitionDto.JSON_PROPERTY_VERSION,
  DecisionDefinitionDto.JSON_PROPERTY_RESOURCE,
  DecisionDefinitionDto.JSON_PROPERTY_DEPLOYMENT_ID,
  DecisionDefinitionDto.JSON_PROPERTY_TENANT_ID,
  DecisionDefinitionDto.JSON_PROPERTY_DECISION_REQUIREMENTS_DEFINITION_ID,
  DecisionDefinitionDto.JSON_PROPERTY_DECISION_REQUIREMENTS_DEFINITION_KEY,
  DecisionDefinitionDto.JSON_PROPERTY_HISTORY_TIME_TO_LIVE,
  DecisionDefinitionDto.JSON_PROPERTY_VERSION_TAG
})
@JsonTypeName("DecisionDefinitionDto")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-10-13T16:56:52.297572+02:00[Europe/Berlin]")
public class DecisionDefinitionDto {
  public static final String JSON_PROPERTY_ID = "id";
  private JsonNullable<String> id = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_KEY = "key";
  private JsonNullable<String> key = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_CATEGORY = "category";
  private JsonNullable<String> category = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_NAME = "name";
  private JsonNullable<String> name = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_VERSION = "version";
  private JsonNullable<Integer> version = JsonNullable.<Integer>undefined();

  public static final String JSON_PROPERTY_RESOURCE = "resource";
  private JsonNullable<String> resource = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_DEPLOYMENT_ID = "deploymentId";
  private JsonNullable<String> deploymentId = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_TENANT_ID = "tenantId";
  private JsonNullable<String> tenantId = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_DECISION_REQUIREMENTS_DEFINITION_ID = "decisionRequirementsDefinitionId";
  private JsonNullable<String> decisionRequirementsDefinitionId = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_DECISION_REQUIREMENTS_DEFINITION_KEY = "decisionRequirementsDefinitionKey";
  private JsonNullable<String> decisionRequirementsDefinitionKey = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_HISTORY_TIME_TO_LIVE = "historyTimeToLive";
  private JsonNullable<Integer> historyTimeToLive = JsonNullable.<Integer>undefined();

  public static final String JSON_PROPERTY_VERSION_TAG = "versionTag";
  private JsonNullable<String> versionTag = JsonNullable.<String>undefined();


  public DecisionDefinitionDto id(String id) {
    this.id = JsonNullable.<String>of(id);
    
    return this;
  }

   /**
   * The id of the decision definition
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The id of the decision definition")
  @JsonIgnore

  public String getId() {
        return id.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getId_JsonNullable() {
    return id;
  }
  
  @JsonProperty(JSON_PROPERTY_ID)
  public void setId_JsonNullable(JsonNullable<String> id) {
    this.id = id;
  }

  public void setId(String id) {
    this.id = JsonNullable.<String>of(id);
  }


  public DecisionDefinitionDto key(String key) {
    this.key = JsonNullable.<String>of(key);
    
    return this;
  }

   /**
   * The key of the decision definition, i.e., the id of the DMN 1.0 XML decision definition.
   * @return key
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The key of the decision definition, i.e., the id of the DMN 1.0 XML decision definition.")
  @JsonIgnore

  public String getKey() {
        return key.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_KEY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getKey_JsonNullable() {
    return key;
  }
  
  @JsonProperty(JSON_PROPERTY_KEY)
  public void setKey_JsonNullable(JsonNullable<String> key) {
    this.key = key;
  }

  public void setKey(String key) {
    this.key = JsonNullable.<String>of(key);
  }


  public DecisionDefinitionDto category(String category) {
    this.category = JsonNullable.<String>of(category);
    
    return this;
  }

   /**
   * The category of the decision definition.
   * @return category
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The category of the decision definition.")
  @JsonIgnore

  public String getCategory() {
        return category.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_CATEGORY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getCategory_JsonNullable() {
    return category;
  }
  
  @JsonProperty(JSON_PROPERTY_CATEGORY)
  public void setCategory_JsonNullable(JsonNullable<String> category) {
    this.category = category;
  }

  public void setCategory(String category) {
    this.category = JsonNullable.<String>of(category);
  }


  public DecisionDefinitionDto name(String name) {
    this.name = JsonNullable.<String>of(name);
    
    return this;
  }

   /**
   * The name of the decision definition.
   * @return name
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The name of the decision definition.")
  @JsonIgnore

  public String getName() {
        return name.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getName_JsonNullable() {
    return name;
  }
  
  @JsonProperty(JSON_PROPERTY_NAME)
  public void setName_JsonNullable(JsonNullable<String> name) {
    this.name = name;
  }

  public void setName(String name) {
    this.name = JsonNullable.<String>of(name);
  }


  public DecisionDefinitionDto version(Integer version) {
    this.version = JsonNullable.<Integer>of(version);
    
    return this;
  }

   /**
   * The version of the decision definition that the engine assigned to it.
   * @return version
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The version of the decision definition that the engine assigned to it.")
  @JsonIgnore

  public Integer getVersion() {
        return version.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_VERSION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Integer> getVersion_JsonNullable() {
    return version;
  }
  
  @JsonProperty(JSON_PROPERTY_VERSION)
  public void setVersion_JsonNullable(JsonNullable<Integer> version) {
    this.version = version;
  }

  public void setVersion(Integer version) {
    this.version = JsonNullable.<Integer>of(version);
  }


  public DecisionDefinitionDto resource(String resource) {
    this.resource = JsonNullable.<String>of(resource);
    
    return this;
  }

   /**
   * The file name of the decision definition.
   * @return resource
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The file name of the decision definition.")
  @JsonIgnore

  public String getResource() {
        return resource.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_RESOURCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getResource_JsonNullable() {
    return resource;
  }
  
  @JsonProperty(JSON_PROPERTY_RESOURCE)
  public void setResource_JsonNullable(JsonNullable<String> resource) {
    this.resource = resource;
  }

  public void setResource(String resource) {
    this.resource = JsonNullable.<String>of(resource);
  }


  public DecisionDefinitionDto deploymentId(String deploymentId) {
    this.deploymentId = JsonNullable.<String>of(deploymentId);
    
    return this;
  }

   /**
   * The deployment id of the decision definition.
   * @return deploymentId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The deployment id of the decision definition.")
  @JsonIgnore

  public String getDeploymentId() {
        return deploymentId.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_DEPLOYMENT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getDeploymentId_JsonNullable() {
    return deploymentId;
  }
  
  @JsonProperty(JSON_PROPERTY_DEPLOYMENT_ID)
  public void setDeploymentId_JsonNullable(JsonNullable<String> deploymentId) {
    this.deploymentId = deploymentId;
  }

  public void setDeploymentId(String deploymentId) {
    this.deploymentId = JsonNullable.<String>of(deploymentId);
  }


  public DecisionDefinitionDto tenantId(String tenantId) {
    this.tenantId = JsonNullable.<String>of(tenantId);
    
    return this;
  }

   /**
   * The tenant id of the decision definition.
   * @return tenantId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The tenant id of the decision definition.")
  @JsonIgnore

  public String getTenantId() {
        return tenantId.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_TENANT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getTenantId_JsonNullable() {
    return tenantId;
  }
  
  @JsonProperty(JSON_PROPERTY_TENANT_ID)
  public void setTenantId_JsonNullable(JsonNullable<String> tenantId) {
    this.tenantId = tenantId;
  }

  public void setTenantId(String tenantId) {
    this.tenantId = JsonNullable.<String>of(tenantId);
  }


  public DecisionDefinitionDto decisionRequirementsDefinitionId(String decisionRequirementsDefinitionId) {
    this.decisionRequirementsDefinitionId = JsonNullable.<String>of(decisionRequirementsDefinitionId);
    
    return this;
  }

   /**
   * The id of the decision requirements definition this decision definition belongs to.
   * @return decisionRequirementsDefinitionId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The id of the decision requirements definition this decision definition belongs to.")
  @JsonIgnore

  public String getDecisionRequirementsDefinitionId() {
        return decisionRequirementsDefinitionId.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_DECISION_REQUIREMENTS_DEFINITION_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getDecisionRequirementsDefinitionId_JsonNullable() {
    return decisionRequirementsDefinitionId;
  }
  
  @JsonProperty(JSON_PROPERTY_DECISION_REQUIREMENTS_DEFINITION_ID)
  public void setDecisionRequirementsDefinitionId_JsonNullable(JsonNullable<String> decisionRequirementsDefinitionId) {
    this.decisionRequirementsDefinitionId = decisionRequirementsDefinitionId;
  }

  public void setDecisionRequirementsDefinitionId(String decisionRequirementsDefinitionId) {
    this.decisionRequirementsDefinitionId = JsonNullable.<String>of(decisionRequirementsDefinitionId);
  }


  public DecisionDefinitionDto decisionRequirementsDefinitionKey(String decisionRequirementsDefinitionKey) {
    this.decisionRequirementsDefinitionKey = JsonNullable.<String>of(decisionRequirementsDefinitionKey);
    
    return this;
  }

   /**
   * The key of the decision requirements definition this decision definition belongs to.
   * @return decisionRequirementsDefinitionKey
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The key of the decision requirements definition this decision definition belongs to.")
  @JsonIgnore

  public String getDecisionRequirementsDefinitionKey() {
        return decisionRequirementsDefinitionKey.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_DECISION_REQUIREMENTS_DEFINITION_KEY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getDecisionRequirementsDefinitionKey_JsonNullable() {
    return decisionRequirementsDefinitionKey;
  }
  
  @JsonProperty(JSON_PROPERTY_DECISION_REQUIREMENTS_DEFINITION_KEY)
  public void setDecisionRequirementsDefinitionKey_JsonNullable(JsonNullable<String> decisionRequirementsDefinitionKey) {
    this.decisionRequirementsDefinitionKey = decisionRequirementsDefinitionKey;
  }

  public void setDecisionRequirementsDefinitionKey(String decisionRequirementsDefinitionKey) {
    this.decisionRequirementsDefinitionKey = JsonNullable.<String>of(decisionRequirementsDefinitionKey);
  }


  public DecisionDefinitionDto historyTimeToLive(Integer historyTimeToLive) {
    this.historyTimeToLive = JsonNullable.<Integer>of(historyTimeToLive);
    
    return this;
  }

   /**
   * History time to live value of the decision definition. Is used within [History cleanup](https://docs.camunda.org/manual/7.16/user-guide/process-engine/history/#history-cleanup).
   * minimum: 0
   * @return historyTimeToLive
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "History time to live value of the decision definition. Is used within [History cleanup](https://docs.camunda.org/manual/7.16/user-guide/process-engine/history/#history-cleanup).")
  @JsonIgnore

  public Integer getHistoryTimeToLive() {
        return historyTimeToLive.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_HISTORY_TIME_TO_LIVE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Integer> getHistoryTimeToLive_JsonNullable() {
    return historyTimeToLive;
  }
  
  @JsonProperty(JSON_PROPERTY_HISTORY_TIME_TO_LIVE)
  public void setHistoryTimeToLive_JsonNullable(JsonNullable<Integer> historyTimeToLive) {
    this.historyTimeToLive = historyTimeToLive;
  }

  public void setHistoryTimeToLive(Integer historyTimeToLive) {
    this.historyTimeToLive = JsonNullable.<Integer>of(historyTimeToLive);
  }


  public DecisionDefinitionDto versionTag(String versionTag) {
    this.versionTag = JsonNullable.<String>of(versionTag);
    
    return this;
  }

   /**
   * The version tag of the decision definition.
   * @return versionTag
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The version tag of the decision definition.")
  @JsonIgnore

  public String getVersionTag() {
        return versionTag.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_VERSION_TAG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getVersionTag_JsonNullable() {
    return versionTag;
  }
  
  @JsonProperty(JSON_PROPERTY_VERSION_TAG)
  public void setVersionTag_JsonNullable(JsonNullable<String> versionTag) {
    this.versionTag = versionTag;
  }

  public void setVersionTag(String versionTag) {
    this.versionTag = JsonNullable.<String>of(versionTag);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DecisionDefinitionDto decisionDefinitionDto = (DecisionDefinitionDto) o;
    return Objects.equals(this.id, decisionDefinitionDto.id) &&
        Objects.equals(this.key, decisionDefinitionDto.key) &&
        Objects.equals(this.category, decisionDefinitionDto.category) &&
        Objects.equals(this.name, decisionDefinitionDto.name) &&
        Objects.equals(this.version, decisionDefinitionDto.version) &&
        Objects.equals(this.resource, decisionDefinitionDto.resource) &&
        Objects.equals(this.deploymentId, decisionDefinitionDto.deploymentId) &&
        Objects.equals(this.tenantId, decisionDefinitionDto.tenantId) &&
        Objects.equals(this.decisionRequirementsDefinitionId, decisionDefinitionDto.decisionRequirementsDefinitionId) &&
        Objects.equals(this.decisionRequirementsDefinitionKey, decisionDefinitionDto.decisionRequirementsDefinitionKey) &&
        Objects.equals(this.historyTimeToLive, decisionDefinitionDto.historyTimeToLive) &&
        Objects.equals(this.versionTag, decisionDefinitionDto.versionTag);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, key, category, name, version, resource, deploymentId, tenantId, decisionRequirementsDefinitionId, decisionRequirementsDefinitionKey, historyTimeToLive, versionTag);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DecisionDefinitionDto {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    key: ").append(toIndentedString(key)).append("\n");
    sb.append("    category: ").append(toIndentedString(category)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    version: ").append(toIndentedString(version)).append("\n");
    sb.append("    resource: ").append(toIndentedString(resource)).append("\n");
    sb.append("    deploymentId: ").append(toIndentedString(deploymentId)).append("\n");
    sb.append("    tenantId: ").append(toIndentedString(tenantId)).append("\n");
    sb.append("    decisionRequirementsDefinitionId: ").append(toIndentedString(decisionRequirementsDefinitionId)).append("\n");
    sb.append("    decisionRequirementsDefinitionKey: ").append(toIndentedString(decisionRequirementsDefinitionKey)).append("\n");
    sb.append("    historyTimeToLive: ").append(toIndentedString(historyTimeToLive)).append("\n");
    sb.append("    versionTag: ").append(toIndentedString(versionTag)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

