/*
 * Camunda Platform REST API
 * OpenApi Spec for Camunda Platform REST API.
 *
 * The version of the OpenAPI document: 7.16.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.camunda.consulting.openapi.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;

/**
 * CamundaFormRef
 */
@JsonPropertyOrder({
  CamundaFormRef.JSON_PROPERTY_KEY,
  CamundaFormRef.JSON_PROPERTY_BINDING,
  CamundaFormRef.JSON_PROPERTY_VERSION
})
@JsonTypeName("CamundaFormRef")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-10-13T17:49:51.183809+02:00[Europe/Berlin]")
public class CamundaFormRef {
  public static final String JSON_PROPERTY_KEY = "key";
  private String key;

  public static final String JSON_PROPERTY_BINDING = "binding";
  private String binding;

  public static final String JSON_PROPERTY_VERSION = "version";
  private Integer version;


  public CamundaFormRef key(String key) {
    
    this.key = key;
    return this;
  }

   /**
   * The key of the Camunda Form.
   * @return key
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The key of the Camunda Form.")
  @JsonProperty(JSON_PROPERTY_KEY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getKey() {
    return key;
  }


  public void setKey(String key) {
    this.key = key;
  }


  public CamundaFormRef binding(String binding) {
    
    this.binding = binding;
    return this;
  }

   /**
   * The binding of the Camunda Form. Can be &#x60;latest&#x60;, &#x60;deployment&#x60; or &#x60;version&#x60;.
   * @return binding
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The binding of the Camunda Form. Can be `latest`, `deployment` or `version`.")
  @JsonProperty(JSON_PROPERTY_BINDING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getBinding() {
    return binding;
  }


  public void setBinding(String binding) {
    this.binding = binding;
  }


  public CamundaFormRef version(Integer version) {
    
    this.version = version;
    return this;
  }

   /**
   * The specific version of a Camunda Form. This property is only set if &#x60;binding&#x60; is &#x60;version&#x60;.
   * @return version
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The specific version of a Camunda Form. This property is only set if `binding` is `version`.")
  @JsonProperty(JSON_PROPERTY_VERSION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getVersion() {
    return version;
  }


  public void setVersion(Integer version) {
    this.version = version;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CamundaFormRef camundaFormRef = (CamundaFormRef) o;
    return Objects.equals(this.key, camundaFormRef.key) &&
        Objects.equals(this.binding, camundaFormRef.binding) &&
        Objects.equals(this.version, camundaFormRef.version);
  }

  @Override
  public int hashCode() {
    return Objects.hash(key, binding, version);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CamundaFormRef {\n");
    sb.append("    key: ").append(toIndentedString(key)).append("\n");
    sb.append("    binding: ").append(toIndentedString(binding)).append("\n");
    sb.append("    version: ").append(toIndentedString(version)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

