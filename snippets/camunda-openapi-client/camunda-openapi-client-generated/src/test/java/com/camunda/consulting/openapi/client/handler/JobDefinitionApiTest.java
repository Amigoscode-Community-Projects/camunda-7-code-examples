/*
 * Camunda Platform REST API
 * OpenApi Spec for Camunda Platform REST API.
 *
 * The version of the OpenAPI document: 7.16.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.camunda.consulting.openapi.client.handler;

import com.camunda.consulting.openapi.client.model.CountResultDto;
import com.camunda.consulting.openapi.client.model.ExceptionDto;
import com.camunda.consulting.openapi.client.model.JobDefinitionDto;
import com.camunda.consulting.openapi.client.model.JobDefinitionPriorityDto;
import com.camunda.consulting.openapi.client.model.JobDefinitionQueryDto;
import com.camunda.consulting.openapi.client.model.JobDefinitionSuspensionStateDto;
import com.camunda.consulting.openapi.client.model.JobDefinitionsSuspensionStateDto;
import com.camunda.consulting.openapi.client.model.RetriesDto;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for JobDefinitionApi
 */
@Ignore
public class JobDefinitionApiTest {

    private final JobDefinitionApi api = new JobDefinitionApi();

    
    /**
     * Get Job Definition
     *
     * Retrieves a job definition by id, according to the &#x60;JobDefinition&#x60; interface in the engine.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getJobDefinitionTest() {
        String id = null;
        JobDefinitionDto response = api.getJobDefinition(id);

        // TODO: test validations
    }
    
    /**
     * Get Job Definitions
     *
     * Queries for job definitions that fulfill given parameters. The size of the result set can be retrieved by using the [Get Job Definition Count](https://docs.camunda.org/manual/7.16/reference/rest/job-definition/get-query-count/) method.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getJobDefinitionsTest() {
        String jobDefinitionId = null;
        String activityIdIn = null;
        String processDefinitionId = null;
        String processDefinitionKey = null;
        String jobType = null;
        String jobConfiguration = null;
        Boolean active = null;
        Boolean suspended = null;
        Boolean withOverridingJobPriority = null;
        String tenantIdIn = null;
        Boolean withoutTenantId = null;
        Boolean includeJobDefinitionsWithoutTenantId = null;
        String sortBy = null;
        String sortOrder = null;
        Integer firstResult = null;
        Integer maxResults = null;
        List<JobDefinitionDto> response = api.getJobDefinitions(jobDefinitionId, activityIdIn, processDefinitionId, processDefinitionKey, jobType, jobConfiguration, active, suspended, withOverridingJobPriority, tenantIdIn, withoutTenantId, includeJobDefinitionsWithoutTenantId, sortBy, sortOrder, firstResult, maxResults);

        // TODO: test validations
    }
    
    /**
     * Get Job Definition Count
     *
     * Queries for the number of job definitions that fulfill given parameters. Takes the same parameters as the [Get Job Definitions](https://docs.camunda.org/manual/7.16/reference/rest/job-definition/get-query/) method.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getJobDefinitionsCountTest() {
        String jobDefinitionId = null;
        String activityIdIn = null;
        String processDefinitionId = null;
        String processDefinitionKey = null;
        String jobType = null;
        String jobConfiguration = null;
        Boolean active = null;
        Boolean suspended = null;
        Boolean withOverridingJobPriority = null;
        String tenantIdIn = null;
        Boolean withoutTenantId = null;
        Boolean includeJobDefinitionsWithoutTenantId = null;
        CountResultDto response = api.getJobDefinitionsCount(jobDefinitionId, activityIdIn, processDefinitionId, processDefinitionKey, jobType, jobConfiguration, active, suspended, withOverridingJobPriority, tenantIdIn, withoutTenantId, includeJobDefinitionsWithoutTenantId);

        // TODO: test validations
    }
    
    /**
     * Get Job Definitions (POST)
     *
     * Queries for job definitions that fulfill given parameters. This method is slightly more powerful than the [Get Job Definitions](https://docs.camunda.org/manual/7.16/reference/rest/job-definition/get-query/) method because it allows filtering by multiple job definitions of types &#x60;String&#x60;, &#x60;Number&#x60; or &#x60;Boolean&#x60;.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void queryJobDefinitionsTest() {
        Integer firstResult = null;
        Integer maxResults = null;
        JobDefinitionQueryDto jobDefinitionQueryDto = null;
        List<JobDefinitionDto> response = api.queryJobDefinitions(firstResult, maxResults, jobDefinitionQueryDto);

        // TODO: test validations
    }
    
    /**
     * Get Job Definition Count (POST)
     *
     * Queries for the number of job definitions that fulfill given parameters. This method takes the same message body as the [Get Job Definitions (POST)](https://docs.camunda.org/manual/7.16/reference/rest/job-definition/post-query/) method and therefore it is slightly more powerful than the [Get Job Definition Count](https://docs.camunda.org/manual/7.16/reference/rest/job-definition/get-query-count/) method.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void queryJobDefinitionsCountTest() {
        JobDefinitionQueryDto jobDefinitionQueryDto = null;
        CountResultDto response = api.queryJobDefinitionsCount(jobDefinitionQueryDto);

        // TODO: test validations
    }
    
    /**
     * Set Job Definition Priority by Id
     *
     * Sets an overriding execution priority for jobs with the given definition id. Optionally, the priorities of all the definitions&#39; existing jobs are updated accordingly. The priority can be reset by setting it to &#x60;null&#x60;, meaning that a new job&#39;s priority will not be determined based on its definition&#39;s priority any longer. See the [user guide on job prioritization](https://docs.camunda.org/manual/7.16/user-guide/process-engine/the-job-executor/#set-job-definition-priorities-via-managementservice-api) for details.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void setJobPriorityJobDefinitionTest() {
        String id = null;
        JobDefinitionPriorityDto jobDefinitionPriorityDto = null;
        api.setJobPriorityJobDefinition(id, jobDefinitionPriorityDto);

        // TODO: test validations
    }
    
    /**
     * Set Job Retries By Job Definition Id
     *
     * Sets the number of retries of all **failed** jobs associated with the given job definition id.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void setJobRetriesJobDefinitionTest() {
        String id = null;
        RetriesDto retriesDto = null;
        api.setJobRetriesJobDefinition(id, retriesDto);

        // TODO: test validations
    }
    
    /**
     * Activate/Suspend Job Definition By Id
     *
     * Activates or suspends a given job definition by id.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateSuspensionStateJobDefinitionTest() {
        String id = null;
        JobDefinitionSuspensionStateDto jobDefinitionSuspensionStateDto = null;
        api.updateSuspensionStateJobDefinition(id, jobDefinitionSuspensionStateDto);

        // TODO: test validations
    }
    
    /**
     * Activate/Suspend Job Definitions
     *
     * Activates or suspends job definitions with the given process definition id or process definition key.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateSuspensionStateJobDefinitionsTest() {
        JobDefinitionsSuspensionStateDto jobDefinitionsSuspensionStateDto = null;
        api.updateSuspensionStateJobDefinitions(jobDefinitionsSuspensionStateDto);

        // TODO: test validations
    }
    
}
