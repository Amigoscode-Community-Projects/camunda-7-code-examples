/*
 * Camunda BPM REST API
 * OpenApi Spec for Camunda BPM REST API.
 *
 * The version of the OpenAPI document: 7.13.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.camunda.consulting.openapi.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.File;
import java.io.IOException;

/**
 * MultiFormAttachmentDto
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2020-07-14T01:59:23.608853+02:00[Europe/Berlin]")
public class MultiFormAttachmentDto {
  public static final String SERIALIZED_NAME_ATTACHMENT_NAME = "attachment-name";
  @SerializedName(SERIALIZED_NAME_ATTACHMENT_NAME)
  private String attachmentName;

  public static final String SERIALIZED_NAME_ATTACHMENT_DESCRIPTION = "attachment-description";
  @SerializedName(SERIALIZED_NAME_ATTACHMENT_DESCRIPTION)
  private String attachmentDescription;

  public static final String SERIALIZED_NAME_ATTACHMENT_TYPE = "attachment-type";
  @SerializedName(SERIALIZED_NAME_ATTACHMENT_TYPE)
  private String attachmentType;

  public static final String SERIALIZED_NAME_URL = "url";
  @SerializedName(SERIALIZED_NAME_URL)
  private String url;

  public static final String SERIALIZED_NAME_CONTENT = "content";
  @SerializedName(SERIALIZED_NAME_CONTENT)
  private File content;


  public MultiFormAttachmentDto attachmentName(String attachmentName) {
    
    this.attachmentName = attachmentName;
    return this;
  }

   /**
   * The name of the attachment.
   * @return attachmentName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The name of the attachment.")

  public String getAttachmentName() {
    return attachmentName;
  }


  public void setAttachmentName(String attachmentName) {
    this.attachmentName = attachmentName;
  }


  public MultiFormAttachmentDto attachmentDescription(String attachmentDescription) {
    
    this.attachmentDescription = attachmentDescription;
    return this;
  }

   /**
   * The description of the attachment.
   * @return attachmentDescription
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The description of the attachment.")

  public String getAttachmentDescription() {
    return attachmentDescription;
  }


  public void setAttachmentDescription(String attachmentDescription) {
    this.attachmentDescription = attachmentDescription;
  }


  public MultiFormAttachmentDto attachmentType(String attachmentType) {
    
    this.attachmentType = attachmentType;
    return this;
  }

   /**
   * The type of the attachment.
   * @return attachmentType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The type of the attachment.")

  public String getAttachmentType() {
    return attachmentType;
  }


  public void setAttachmentType(String attachmentType) {
    this.attachmentType = attachmentType;
  }


  public MultiFormAttachmentDto url(String url) {
    
    this.url = url;
    return this;
  }

   /**
   * The url to the remote content of the attachment.
   * @return url
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The url to the remote content of the attachment.")

  public String getUrl() {
    return url;
  }


  public void setUrl(String url) {
    this.url = url;
  }


  public MultiFormAttachmentDto content(File content) {
    
    this.content = content;
    return this;
  }

   /**
   * The content of the attachment.
   * @return content
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The content of the attachment.")

  public File getContent() {
    return content;
  }


  public void setContent(File content) {
    this.content = content;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    MultiFormAttachmentDto multiFormAttachmentDto = (MultiFormAttachmentDto) o;
    return Objects.equals(this.attachmentName, multiFormAttachmentDto.attachmentName) &&
        Objects.equals(this.attachmentDescription, multiFormAttachmentDto.attachmentDescription) &&
        Objects.equals(this.attachmentType, multiFormAttachmentDto.attachmentType) &&
        Objects.equals(this.url, multiFormAttachmentDto.url) &&
        Objects.equals(this.content, multiFormAttachmentDto.content);
  }

  @Override
  public int hashCode() {
    return Objects.hash(attachmentName, attachmentDescription, attachmentType, url, content);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class MultiFormAttachmentDto {\n");
    sb.append("    attachmentName: ").append(toIndentedString(attachmentName)).append("\n");
    sb.append("    attachmentDescription: ").append(toIndentedString(attachmentDescription)).append("\n");
    sb.append("    attachmentType: ").append(toIndentedString(attachmentType)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("    content: ").append(toIndentedString(content)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

